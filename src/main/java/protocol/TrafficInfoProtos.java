// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PATH/TrafficInfo.proto

package protocol;

public final class TrafficInfoProtos {
  private TrafficInfoProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TrafficInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.TrafficInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string Id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required string Id = 1;</code>
     */
    String getId();
    /**
     * <code>required string Id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>required string Time = 2;</code>
     */
    boolean hasTime();
    /**
     * <code>required string Time = 2;</code>
     */
    String getTime();
    /**
     * <code>required string Time = 2;</code>
     */
    com.google.protobuf.ByteString
        getTimeBytes();

    /**
     * <code>required uint32 TotalVehicle = 3;</code>
     */
    boolean hasTotalVehicle();
    /**
     * <code>required uint32 TotalVehicle = 3;</code>
     */
    int getTotalVehicle();

    /**
     * <code>required uint32 LargeVehicle = 4;</code>
     */
    boolean hasLargeVehicle();
    /**
     * <code>required uint32 LargeVehicle = 4;</code>
     */
    int getLargeVehicle();

    /**
     * <code>required uint32 MediumVehicle = 5;</code>
     */
    boolean hasMediumVehicle();
    /**
     * <code>required uint32 MediumVehicle = 5;</code>
     */
    int getMediumVehicle();

    /**
     * <code>required uint32 SmallVehicle = 6;</code>
     */
    boolean hasSmallVehicle();
    /**
     * <code>required uint32 SmallVehicle = 6;</code>
     */
    int getSmallVehicle();

    /**
     * <code>required uint32 OtherVehicle = 7;</code>
     */
    boolean hasOtherVehicle();
    /**
     * <code>required uint32 OtherVehicle = 7;</code>
     */
    int getOtherVehicle();

    /**
     * <code>required int32 DriveChan = 8;</code>
     */
    boolean hasDriveChan();
    /**
     * <code>required int32 DriveChan = 8;</code>
     */
    int getDriveChan();

    /**
     * <code>required float AverageSpeed = 9;</code>
     */
    boolean hasAverageSpeed();
    /**
     * <code>required float AverageSpeed = 9;</code>
     */
    float getAverageSpeed();
  }
  /**
   * Protobuf type {@code protocol.TrafficInfo}
   */
  public static final class TrafficInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol.TrafficInfo)
      TrafficInfoOrBuilder {
    // Use TrafficInfo.newBuilder() to construct.
    private TrafficInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TrafficInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TrafficInfo defaultInstance;
    public static TrafficInfo getDefaultInstance() {
      return defaultInstance;
    }

    public TrafficInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TrafficInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              time_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              totalVehicle_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              largeVehicle_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              mediumVehicle_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              smallVehicle_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              otherVehicle_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              driveChan_ = input.readInt32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              averageSpeed_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TrafficInfoProtos.internal_static_protocol_TrafficInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TrafficInfoProtos.internal_static_protocol_TrafficInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TrafficInfo.class, Builder.class);
    }

    public static com.google.protobuf.Parser<TrafficInfo> PARSER =
        new com.google.protobuf.AbstractParser<TrafficInfo>() {
      public TrafficInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrafficInfo(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<TrafficInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private Object id_;
    /**
     * <code>required string Id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string Id = 1;</code>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string Id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private Object time_;
    /**
     * <code>required string Time = 2;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string Time = 2;</code>
     */
    public String getTime() {
      Object ref = time_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          time_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string Time = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTimeBytes() {
      Object ref = time_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        time_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOTALVEHICLE_FIELD_NUMBER = 3;
    private int totalVehicle_;
    /**
     * <code>required uint32 TotalVehicle = 3;</code>
     */
    public boolean hasTotalVehicle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 TotalVehicle = 3;</code>
     */
    public int getTotalVehicle() {
      return totalVehicle_;
    }

    public static final int LARGEVEHICLE_FIELD_NUMBER = 4;
    private int largeVehicle_;
    /**
     * <code>required uint32 LargeVehicle = 4;</code>
     */
    public boolean hasLargeVehicle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 LargeVehicle = 4;</code>
     */
    public int getLargeVehicle() {
      return largeVehicle_;
    }

    public static final int MEDIUMVEHICLE_FIELD_NUMBER = 5;
    private int mediumVehicle_;
    /**
     * <code>required uint32 MediumVehicle = 5;</code>
     */
    public boolean hasMediumVehicle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 MediumVehicle = 5;</code>
     */
    public int getMediumVehicle() {
      return mediumVehicle_;
    }

    public static final int SMALLVEHICLE_FIELD_NUMBER = 6;
    private int smallVehicle_;
    /**
     * <code>required uint32 SmallVehicle = 6;</code>
     */
    public boolean hasSmallVehicle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required uint32 SmallVehicle = 6;</code>
     */
    public int getSmallVehicle() {
      return smallVehicle_;
    }

    public static final int OTHERVEHICLE_FIELD_NUMBER = 7;
    private int otherVehicle_;
    /**
     * <code>required uint32 OtherVehicle = 7;</code>
     */
    public boolean hasOtherVehicle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required uint32 OtherVehicle = 7;</code>
     */
    public int getOtherVehicle() {
      return otherVehicle_;
    }

    public static final int DRIVECHAN_FIELD_NUMBER = 8;
    private int driveChan_;
    /**
     * <code>required int32 DriveChan = 8;</code>
     */
    public boolean hasDriveChan() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 DriveChan = 8;</code>
     */
    public int getDriveChan() {
      return driveChan_;
    }

    public static final int AVERAGESPEED_FIELD_NUMBER = 9;
    private float averageSpeed_;
    /**
     * <code>required float AverageSpeed = 9;</code>
     */
    public boolean hasAverageSpeed() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required float AverageSpeed = 9;</code>
     */
    public float getAverageSpeed() {
      return averageSpeed_;
    }

    private void initFields() {
      id_ = "";
      time_ = "";
      totalVehicle_ = 0;
      largeVehicle_ = 0;
      mediumVehicle_ = 0;
      smallVehicle_ = 0;
      otherVehicle_ = 0;
      driveChan_ = 0;
      averageSpeed_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalVehicle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLargeVehicle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMediumVehicle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSmallVehicle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOtherVehicle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDriveChan()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAverageSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, totalVehicle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, largeVehicle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, mediumVehicle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, smallVehicle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, otherVehicle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, driveChan_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, averageSpeed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, totalVehicle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, largeVehicle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, mediumVehicle_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, smallVehicle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, otherVehicle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, driveChan_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, averageSpeed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TrafficInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TrafficInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TrafficInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TrafficInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TrafficInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TrafficInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TrafficInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TrafficInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TrafficInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TrafficInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TrafficInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.TrafficInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.TrafficInfo)
        TrafficInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TrafficInfoProtos.internal_static_protocol_TrafficInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TrafficInfoProtos.internal_static_protocol_TrafficInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TrafficInfo.class, Builder.class);
      }

      // Construct using protocol.TrafficInfoProtos.TrafficInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        totalVehicle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        largeVehicle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        mediumVehicle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        smallVehicle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        otherVehicle_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        driveChan_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        averageSpeed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TrafficInfoProtos.internal_static_protocol_TrafficInfo_descriptor;
      }

      public TrafficInfo getDefaultInstanceForType() {
        return TrafficInfo.getDefaultInstance();
      }

      public TrafficInfo build() {
        TrafficInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TrafficInfo buildPartial() {
        TrafficInfo result = new TrafficInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.totalVehicle_ = totalVehicle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.largeVehicle_ = largeVehicle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mediumVehicle_ = mediumVehicle_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.smallVehicle_ = smallVehicle_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.otherVehicle_ = otherVehicle_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.driveChan_ = driveChan_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.averageSpeed_ = averageSpeed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TrafficInfo) {
          return mergeFrom((TrafficInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TrafficInfo other) {
        if (other == TrafficInfo.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasTime()) {
          bitField0_ |= 0x00000002;
          time_ = other.time_;
          onChanged();
        }
        if (other.hasTotalVehicle()) {
          setTotalVehicle(other.getTotalVehicle());
        }
        if (other.hasLargeVehicle()) {
          setLargeVehicle(other.getLargeVehicle());
        }
        if (other.hasMediumVehicle()) {
          setMediumVehicle(other.getMediumVehicle());
        }
        if (other.hasSmallVehicle()) {
          setSmallVehicle(other.getSmallVehicle());
        }
        if (other.hasOtherVehicle()) {
          setOtherVehicle(other.getOtherVehicle());
        }
        if (other.hasDriveChan()) {
          setDriveChan(other.getDriveChan());
        }
        if (other.hasAverageSpeed()) {
          setAverageSpeed(other.getAverageSpeed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {

          return false;
        }
        if (!hasTime()) {

          return false;
        }
        if (!hasTotalVehicle()) {

          return false;
        }
        if (!hasLargeVehicle()) {

          return false;
        }
        if (!hasMediumVehicle()) {

          return false;
        }
        if (!hasSmallVehicle()) {

          return false;
        }
        if (!hasOtherVehicle()) {

          return false;
        }
        if (!hasDriveChan()) {

          return false;
        }
        if (!hasAverageSpeed()) {

          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TrafficInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TrafficInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object id_ = "";
      /**
       * <code>required string Id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string Id = 1;</code>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string Id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string Id = 1;</code>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string Id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>required string Id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private Object time_ = "";
      /**
       * <code>required string Time = 2;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string Time = 2;</code>
       */
      public String getTime() {
        Object ref = time_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            time_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string Time = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string Time = 2;</code>
       */
      public Builder setTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string Time = 2;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = getDefaultInstance().getTime();
        onChanged();
        return this;
      }
      /**
       * <code>required string Time = 2;</code>
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }

      private int totalVehicle_ ;
      /**
       * <code>required uint32 TotalVehicle = 3;</code>
       */
      public boolean hasTotalVehicle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 TotalVehicle = 3;</code>
       */
      public int getTotalVehicle() {
        return totalVehicle_;
      }
      /**
       * <code>required uint32 TotalVehicle = 3;</code>
       */
      public Builder setTotalVehicle(int value) {
        bitField0_ |= 0x00000004;
        totalVehicle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 TotalVehicle = 3;</code>
       */
      public Builder clearTotalVehicle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalVehicle_ = 0;
        onChanged();
        return this;
      }

      private int largeVehicle_ ;
      /**
       * <code>required uint32 LargeVehicle = 4;</code>
       */
      public boolean hasLargeVehicle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 LargeVehicle = 4;</code>
       */
      public int getLargeVehicle() {
        return largeVehicle_;
      }
      /**
       * <code>required uint32 LargeVehicle = 4;</code>
       */
      public Builder setLargeVehicle(int value) {
        bitField0_ |= 0x00000008;
        largeVehicle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 LargeVehicle = 4;</code>
       */
      public Builder clearLargeVehicle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        largeVehicle_ = 0;
        onChanged();
        return this;
      }

      private int mediumVehicle_ ;
      /**
       * <code>required uint32 MediumVehicle = 5;</code>
       */
      public boolean hasMediumVehicle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 MediumVehicle = 5;</code>
       */
      public int getMediumVehicle() {
        return mediumVehicle_;
      }
      /**
       * <code>required uint32 MediumVehicle = 5;</code>
       */
      public Builder setMediumVehicle(int value) {
        bitField0_ |= 0x00000010;
        mediumVehicle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 MediumVehicle = 5;</code>
       */
      public Builder clearMediumVehicle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mediumVehicle_ = 0;
        onChanged();
        return this;
      }

      private int smallVehicle_ ;
      /**
       * <code>required uint32 SmallVehicle = 6;</code>
       */
      public boolean hasSmallVehicle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required uint32 SmallVehicle = 6;</code>
       */
      public int getSmallVehicle() {
        return smallVehicle_;
      }
      /**
       * <code>required uint32 SmallVehicle = 6;</code>
       */
      public Builder setSmallVehicle(int value) {
        bitField0_ |= 0x00000020;
        smallVehicle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 SmallVehicle = 6;</code>
       */
      public Builder clearSmallVehicle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        smallVehicle_ = 0;
        onChanged();
        return this;
      }

      private int otherVehicle_ ;
      /**
       * <code>required uint32 OtherVehicle = 7;</code>
       */
      public boolean hasOtherVehicle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required uint32 OtherVehicle = 7;</code>
       */
      public int getOtherVehicle() {
        return otherVehicle_;
      }
      /**
       * <code>required uint32 OtherVehicle = 7;</code>
       */
      public Builder setOtherVehicle(int value) {
        bitField0_ |= 0x00000040;
        otherVehicle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 OtherVehicle = 7;</code>
       */
      public Builder clearOtherVehicle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        otherVehicle_ = 0;
        onChanged();
        return this;
      }

      private int driveChan_ ;
      /**
       * <code>required int32 DriveChan = 8;</code>
       */
      public boolean hasDriveChan() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 DriveChan = 8;</code>
       */
      public int getDriveChan() {
        return driveChan_;
      }
      /**
       * <code>required int32 DriveChan = 8;</code>
       */
      public Builder setDriveChan(int value) {
        bitField0_ |= 0x00000080;
        driveChan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 DriveChan = 8;</code>
       */
      public Builder clearDriveChan() {
        bitField0_ = (bitField0_ & ~0x00000080);
        driveChan_ = 0;
        onChanged();
        return this;
      }

      private float averageSpeed_ ;
      /**
       * <code>required float AverageSpeed = 9;</code>
       */
      public boolean hasAverageSpeed() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required float AverageSpeed = 9;</code>
       */
      public float getAverageSpeed() {
        return averageSpeed_;
      }
      /**
       * <code>required float AverageSpeed = 9;</code>
       */
      public Builder setAverageSpeed(float value) {
        bitField0_ |= 0x00000100;
        averageSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float AverageSpeed = 9;</code>
       */
      public Builder clearAverageSpeed() {
        bitField0_ = (bitField0_ & ~0x00000100);
        averageSpeed_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.TrafficInfo)
    }

    static {
      defaultInstance = new TrafficInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protocol.TrafficInfo)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_TrafficInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_TrafficInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\026PATH/TrafficInfo.proto\022\010protocol\"\277\001\n\013T" +
      "rafficInfo\022\n\n\002Id\030\001 \002(\t\022\014\n\004Time\030\002 \002(\t\022\024\n\014" +
      "TotalVehicle\030\003 \002(\r\022\024\n\014LargeVehicle\030\004 \002(\r" +
      "\022\025\n\rMediumVehicle\030\005 \002(\r\022\024\n\014SmallVehicle\030" +
      "\006 \002(\r\022\024\n\014OtherVehicle\030\007 \002(\r\022\021\n\tDriveChan" +
      "\030\010 \002(\005\022\024\n\014AverageSpeed\030\t \002(\002B\035\n\010protocol" +
      "B\021TrafficInfoProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_protocol_TrafficInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protocol_TrafficInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_TrafficInfo_descriptor,
        new String[] { "Id", "Time", "TotalVehicle", "LargeVehicle", "MediumVehicle", "SmallVehicle", "OtherVehicle", "DriveChan", "AverageSpeed", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
