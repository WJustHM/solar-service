// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PATH/OffenceSnapData.proto

package protocol;

public final class OffenceSnapDataProtos {
  private OffenceSnapDataProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PlateInfoModelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.PlateInfoModel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string PlateType = 1;</code>
     */
    boolean hasPlateType();
    /**
     * <code>required string PlateType = 1;</code>
     */
    String getPlateType();
    /**
     * <code>required string PlateType = 1;</code>
     */
    com.google.protobuf.ByteString
        getPlateTypeBytes();

    /**
     * <code>required string Color = 2;</code>
     */
    boolean hasColor();
    /**
     * <code>required string Color = 2;</code>
     */
    String getColor();
    /**
     * <code>required string Color = 2;</code>
     */
    com.google.protobuf.ByteString
        getColorBytes();

    /**
     * <code>required int32 Bright = 3;</code>
     */
    boolean hasBright();
    /**
     * <code>required int32 Bright = 3;</code>
     */
    int getBright();

    /**
     * <code>required int32 LicenseLen = 4;</code>
     */
    boolean hasLicenseLen();
    /**
     * <code>required int32 LicenseLen = 4;</code>
     */
    int getLicenseLen();

    /**
     * <code>required int32 Country = 5;</code>
     */
    boolean hasCountry();
    /**
     * <code>required int32 Country = 5;</code>
     */
    int getCountry();

    /**
     * <code>required string License = 6;</code>
     */
    boolean hasLicense();
    /**
     * <code>required string License = 6;</code>
     */
    String getLicense();
    /**
     * <code>required string License = 6;</code>
     */
    com.google.protobuf.ByteString
        getLicenseBytes();

    /**
     * <code>required string Believe = 7;</code>
     */
    boolean hasBelieve();
    /**
     * <code>required string Believe = 7;</code>
     */
    String getBelieve();
    /**
     * <code>required string Believe = 7;</code>
     */
    com.google.protobuf.ByteString
        getBelieveBytes();
  }
  /**
   * Protobuf type {@code protocol.PlateInfoModel}
   */
  public static final class PlateInfoModel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol.PlateInfoModel)
      PlateInfoModelOrBuilder {
    // Use PlateInfoModel.newBuilder() to construct.
    private PlateInfoModel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlateInfoModel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlateInfoModel defaultInstance;
    public static PlateInfoModel getDefaultInstance() {
      return defaultInstance;
    }

    public PlateInfoModel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlateInfoModel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              plateType_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              color_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              bright_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              licenseLen_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              country_ = input.readInt32();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              license_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              believe_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OffenceSnapDataProtos.internal_static_protocol_PlateInfoModel_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OffenceSnapDataProtos.internal_static_protocol_PlateInfoModel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PlateInfoModel.class, Builder.class);
    }

    public static com.google.protobuf.Parser<PlateInfoModel> PARSER =
        new com.google.protobuf.AbstractParser<PlateInfoModel>() {
      public PlateInfoModel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlateInfoModel(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<PlateInfoModel> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLATETYPE_FIELD_NUMBER = 1;
    private Object plateType_;
    /**
     * <code>required string PlateType = 1;</code>
     */
    public boolean hasPlateType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string PlateType = 1;</code>
     */
    public String getPlateType() {
      Object ref = plateType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          plateType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string PlateType = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPlateTypeBytes() {
      Object ref = plateType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        plateType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLOR_FIELD_NUMBER = 2;
    private Object color_;
    /**
     * <code>required string Color = 2;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string Color = 2;</code>
     */
    public String getColor() {
      Object ref = color_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          color_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string Color = 2;</code>
     */
    public com.google.protobuf.ByteString
        getColorBytes() {
      Object ref = color_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        color_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BRIGHT_FIELD_NUMBER = 3;
    private int bright_;
    /**
     * <code>required int32 Bright = 3;</code>
     */
    public boolean hasBright() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 Bright = 3;</code>
     */
    public int getBright() {
      return bright_;
    }

    public static final int LICENSELEN_FIELD_NUMBER = 4;
    private int licenseLen_;
    /**
     * <code>required int32 LicenseLen = 4;</code>
     */
    public boolean hasLicenseLen() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 LicenseLen = 4;</code>
     */
    public int getLicenseLen() {
      return licenseLen_;
    }

    public static final int COUNTRY_FIELD_NUMBER = 5;
    private int country_;
    /**
     * <code>required int32 Country = 5;</code>
     */
    public boolean hasCountry() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 Country = 5;</code>
     */
    public int getCountry() {
      return country_;
    }

    public static final int LICENSE_FIELD_NUMBER = 6;
    private Object license_;
    /**
     * <code>required string License = 6;</code>
     */
    public boolean hasLicense() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string License = 6;</code>
     */
    public String getLicense() {
      Object ref = license_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          license_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string License = 6;</code>
     */
    public com.google.protobuf.ByteString
        getLicenseBytes() {
      Object ref = license_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        license_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BELIEVE_FIELD_NUMBER = 7;
    private Object believe_;
    /**
     * <code>required string Believe = 7;</code>
     */
    public boolean hasBelieve() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required string Believe = 7;</code>
     */
    public String getBelieve() {
      Object ref = believe_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          believe_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string Believe = 7;</code>
     */
    public com.google.protobuf.ByteString
        getBelieveBytes() {
      Object ref = believe_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        believe_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      plateType_ = "";
      color_ = "";
      bright_ = 0;
      licenseLen_ = 0;
      country_ = 0;
      license_ = "";
      believe_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPlateType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBright()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLicenseLen()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCountry()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLicense()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBelieve()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPlateTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getColorBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, bright_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, licenseLen_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, country_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getLicenseBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getBelieveBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPlateTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getColorBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, bright_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, licenseLen_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, country_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getLicenseBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getBelieveBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static PlateInfoModel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlateInfoModel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlateInfoModel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlateInfoModel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlateInfoModel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PlateInfoModel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static PlateInfoModel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static PlateInfoModel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static PlateInfoModel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PlateInfoModel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(PlateInfoModel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.PlateInfoModel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.PlateInfoModel)
        PlateInfoModelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OffenceSnapDataProtos.internal_static_protocol_PlateInfoModel_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OffenceSnapDataProtos.internal_static_protocol_PlateInfoModel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PlateInfoModel.class, Builder.class);
      }

      // Construct using protocol.OffenceSnapDataProtos.PlateInfoModel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        plateType_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        color_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        bright_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        licenseLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        country_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        license_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        believe_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OffenceSnapDataProtos.internal_static_protocol_PlateInfoModel_descriptor;
      }

      public PlateInfoModel getDefaultInstanceForType() {
        return PlateInfoModel.getDefaultInstance();
      }

      public PlateInfoModel build() {
        PlateInfoModel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PlateInfoModel buildPartial() {
        PlateInfoModel result = new PlateInfoModel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.plateType_ = plateType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.color_ = color_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bright_ = bright_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.licenseLen_ = licenseLen_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.country_ = country_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.license_ = license_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.believe_ = believe_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PlateInfoModel) {
          return mergeFrom((PlateInfoModel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PlateInfoModel other) {
        if (other == PlateInfoModel.getDefaultInstance()) return this;
        if (other.hasPlateType()) {
          bitField0_ |= 0x00000001;
          plateType_ = other.plateType_;
          onChanged();
        }
        if (other.hasColor()) {
          bitField0_ |= 0x00000002;
          color_ = other.color_;
          onChanged();
        }
        if (other.hasBright()) {
          setBright(other.getBright());
        }
        if (other.hasLicenseLen()) {
          setLicenseLen(other.getLicenseLen());
        }
        if (other.hasCountry()) {
          setCountry(other.getCountry());
        }
        if (other.hasLicense()) {
          bitField0_ |= 0x00000020;
          license_ = other.license_;
          onChanged();
        }
        if (other.hasBelieve()) {
          bitField0_ |= 0x00000040;
          believe_ = other.believe_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlateType()) {
          
          return false;
        }
        if (!hasColor()) {
          
          return false;
        }
        if (!hasBright()) {
          
          return false;
        }
        if (!hasLicenseLen()) {
          
          return false;
        }
        if (!hasCountry()) {
          
          return false;
        }
        if (!hasLicense()) {
          
          return false;
        }
        if (!hasBelieve()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PlateInfoModel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PlateInfoModel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object plateType_ = "";
      /**
       * <code>required string PlateType = 1;</code>
       */
      public boolean hasPlateType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string PlateType = 1;</code>
       */
      public String getPlateType() {
        Object ref = plateType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            plateType_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string PlateType = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPlateTypeBytes() {
        Object ref = plateType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          plateType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string PlateType = 1;</code>
       */
      public Builder setPlateType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        plateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string PlateType = 1;</code>
       */
      public Builder clearPlateType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        plateType_ = getDefaultInstance().getPlateType();
        onChanged();
        return this;
      }
      /**
       * <code>required string PlateType = 1;</code>
       */
      public Builder setPlateTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        plateType_ = value;
        onChanged();
        return this;
      }

      private Object color_ = "";
      /**
       * <code>required string Color = 2;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string Color = 2;</code>
       */
      public String getColor() {
        Object ref = color_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            color_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string Color = 2;</code>
       */
      public com.google.protobuf.ByteString
          getColorBytes() {
        Object ref = color_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          color_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string Color = 2;</code>
       */
      public Builder setColor(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        color_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string Color = 2;</code>
       */
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        color_ = getDefaultInstance().getColor();
        onChanged();
        return this;
      }
      /**
       * <code>required string Color = 2;</code>
       */
      public Builder setColorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        color_ = value;
        onChanged();
        return this;
      }

      private int bright_ ;
      /**
       * <code>required int32 Bright = 3;</code>
       */
      public boolean hasBright() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 Bright = 3;</code>
       */
      public int getBright() {
        return bright_;
      }
      /**
       * <code>required int32 Bright = 3;</code>
       */
      public Builder setBright(int value) {
        bitField0_ |= 0x00000004;
        bright_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 Bright = 3;</code>
       */
      public Builder clearBright() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bright_ = 0;
        onChanged();
        return this;
      }

      private int licenseLen_ ;
      /**
       * <code>required int32 LicenseLen = 4;</code>
       */
      public boolean hasLicenseLen() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 LicenseLen = 4;</code>
       */
      public int getLicenseLen() {
        return licenseLen_;
      }
      /**
       * <code>required int32 LicenseLen = 4;</code>
       */
      public Builder setLicenseLen(int value) {
        bitField0_ |= 0x00000008;
        licenseLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 LicenseLen = 4;</code>
       */
      public Builder clearLicenseLen() {
        bitField0_ = (bitField0_ & ~0x00000008);
        licenseLen_ = 0;
        onChanged();
        return this;
      }

      private int country_ ;
      /**
       * <code>required int32 Country = 5;</code>
       */
      public boolean hasCountry() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 Country = 5;</code>
       */
      public int getCountry() {
        return country_;
      }
      /**
       * <code>required int32 Country = 5;</code>
       */
      public Builder setCountry(int value) {
        bitField0_ |= 0x00000010;
        country_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 Country = 5;</code>
       */
      public Builder clearCountry() {
        bitField0_ = (bitField0_ & ~0x00000010);
        country_ = 0;
        onChanged();
        return this;
      }

      private Object license_ = "";
      /**
       * <code>required string License = 6;</code>
       */
      public boolean hasLicense() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string License = 6;</code>
       */
      public String getLicense() {
        Object ref = license_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            license_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string License = 6;</code>
       */
      public com.google.protobuf.ByteString
          getLicenseBytes() {
        Object ref = license_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          license_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string License = 6;</code>
       */
      public Builder setLicense(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        license_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string License = 6;</code>
       */
      public Builder clearLicense() {
        bitField0_ = (bitField0_ & ~0x00000020);
        license_ = getDefaultInstance().getLicense();
        onChanged();
        return this;
      }
      /**
       * <code>required string License = 6;</code>
       */
      public Builder setLicenseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        license_ = value;
        onChanged();
        return this;
      }

      private Object believe_ = "";
      /**
       * <code>required string Believe = 7;</code>
       */
      public boolean hasBelieve() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required string Believe = 7;</code>
       */
      public String getBelieve() {
        Object ref = believe_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            believe_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string Believe = 7;</code>
       */
      public com.google.protobuf.ByteString
          getBelieveBytes() {
        Object ref = believe_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          believe_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string Believe = 7;</code>
       */
      public Builder setBelieve(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        believe_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string Believe = 7;</code>
       */
      public Builder clearBelieve() {
        bitField0_ = (bitField0_ & ~0x00000040);
        believe_ = getDefaultInstance().getBelieve();
        onChanged();
        return this;
      }
      /**
       * <code>required string Believe = 7;</code>
       */
      public Builder setBelieveBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        believe_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.PlateInfoModel)
    }

    static {
      defaultInstance = new PlateInfoModel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protocol.PlateInfoModel)
  }

  public interface VehicleInfoModelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.VehicleInfoModel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 Index = 1;</code>
     */
    boolean hasIndex();
    /**
     * <code>required int32 Index = 1;</code>
     */
    int getIndex();

    /**
     * <code>required int32 VehicleType = 2;</code>
     */
    boolean hasVehicleType();
    /**
     * <code>required int32 VehicleType = 2;</code>
     */
    int getVehicleType();

    /**
     * <code>required int32 ChanIndex = 3;</code>
     */
    boolean hasChanIndex();
    /**
     * <code>required int32 ChanIndex = 3;</code>
     */
    int getChanIndex();

    /**
     * <code>required int32 ColorDepth = 4;</code>
     */
    boolean hasColorDepth();
    /**
     * <code>required int32 ColorDepth = 4;</code>
     */
    int getColorDepth();

    /**
     * <code>required string Color = 5;</code>
     */
    boolean hasColor();
    /**
     * <code>required string Color = 5;</code>
     */
    String getColor();
    /**
     * <code>required string Color = 5;</code>
     */
    com.google.protobuf.ByteString
        getColorBytes();

    /**
     * <code>required float Speed = 6;</code>
     */
    boolean hasSpeed();
    /**
     * <code>required float Speed = 6;</code>
     */
    float getSpeed();

    /**
     * <code>required float Length = 7;</code>
     */
    boolean hasLength();
    /**
     * <code>required float Length = 7;</code>
     */
    float getLength();

    /**
     * <code>required string VehicleLogoRecog = 8;</code>
     */
    boolean hasVehicleLogoRecog();
    /**
     * <code>required string VehicleLogoRecog = 8;</code>
     */
    String getVehicleLogoRecog();
    /**
     * <code>required string VehicleLogoRecog = 8;</code>
     */
    com.google.protobuf.ByteString
        getVehicleLogoRecogBytes();

    /**
     * <code>required string VehicleSubLogoRecog = 9;</code>
     */
    boolean hasVehicleSubLogoRecog();
    /**
     * <code>required string VehicleSubLogoRecog = 9;</code>
     */
    String getVehicleSubLogoRecog();
    /**
     * <code>required string VehicleSubLogoRecog = 9;</code>
     */
    com.google.protobuf.ByteString
        getVehicleSubLogoRecogBytes();

    /**
     * <code>required string VehicleModel = 10;</code>
     */
    boolean hasVehicleModel();
    /**
     * <code>required string VehicleModel = 10;</code>
     */
    String getVehicleModel();
    /**
     * <code>required string VehicleModel = 10;</code>
     */
    com.google.protobuf.ByteString
        getVehicleModelBytes();

    /**
     * <code>required int32 VehicleAttribute = 11;</code>
     *
     * <pre>
     *车辆属性
     * </pre>
     */
    boolean hasVehicleAttribute();
    /**
     * <code>required int32 VehicleAttribute = 11;</code>
     *
     * <pre>
     *车辆属性
     * </pre>
     */
    int getVehicleAttribute();
  }
  /**
   * Protobuf type {@code protocol.VehicleInfoModel}
   */
  public static final class VehicleInfoModel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol.VehicleInfoModel)
      VehicleInfoModelOrBuilder {
    // Use VehicleInfoModel.newBuilder() to construct.
    private VehicleInfoModel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VehicleInfoModel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VehicleInfoModel defaultInstance;
    public static VehicleInfoModel getDefaultInstance() {
      return defaultInstance;
    }

    public VehicleInfoModel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VehicleInfoModel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              index_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              vehicleType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              chanIndex_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              colorDepth_ = input.readInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              color_ = bs;
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              speed_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              length_ = input.readFloat();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              vehicleLogoRecog_ = bs;
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              vehicleSubLogoRecog_ = bs;
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              vehicleModel_ = bs;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              vehicleAttribute_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OffenceSnapDataProtos.internal_static_protocol_VehicleInfoModel_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OffenceSnapDataProtos.internal_static_protocol_VehicleInfoModel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VehicleInfoModel.class, Builder.class);
    }

    public static com.google.protobuf.Parser<VehicleInfoModel> PARSER =
        new com.google.protobuf.AbstractParser<VehicleInfoModel>() {
      public VehicleInfoModel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VehicleInfoModel(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<VehicleInfoModel> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <code>required int32 Index = 1;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 Index = 1;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int VEHICLETYPE_FIELD_NUMBER = 2;
    private int vehicleType_;
    /**
     * <code>required int32 VehicleType = 2;</code>
     */
    public boolean hasVehicleType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 VehicleType = 2;</code>
     */
    public int getVehicleType() {
      return vehicleType_;
    }

    public static final int CHANINDEX_FIELD_NUMBER = 3;
    private int chanIndex_;
    /**
     * <code>required int32 ChanIndex = 3;</code>
     */
    public boolean hasChanIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 ChanIndex = 3;</code>
     */
    public int getChanIndex() {
      return chanIndex_;
    }

    public static final int COLORDEPTH_FIELD_NUMBER = 4;
    private int colorDepth_;
    /**
     * <code>required int32 ColorDepth = 4;</code>
     */
    public boolean hasColorDepth() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 ColorDepth = 4;</code>
     */
    public int getColorDepth() {
      return colorDepth_;
    }

    public static final int COLOR_FIELD_NUMBER = 5;
    private Object color_;
    /**
     * <code>required string Color = 5;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string Color = 5;</code>
     */
    public String getColor() {
      Object ref = color_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          color_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string Color = 5;</code>
     */
    public com.google.protobuf.ByteString
        getColorBytes() {
      Object ref = color_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        color_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPEED_FIELD_NUMBER = 6;
    private float speed_;
    /**
     * <code>required float Speed = 6;</code>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required float Speed = 6;</code>
     */
    public float getSpeed() {
      return speed_;
    }

    public static final int LENGTH_FIELD_NUMBER = 7;
    private float length_;
    /**
     * <code>required float Length = 7;</code>
     */
    public boolean hasLength() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required float Length = 7;</code>
     */
    public float getLength() {
      return length_;
    }

    public static final int VEHICLELOGORECOG_FIELD_NUMBER = 8;
    private Object vehicleLogoRecog_;
    /**
     * <code>required string VehicleLogoRecog = 8;</code>
     */
    public boolean hasVehicleLogoRecog() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required string VehicleLogoRecog = 8;</code>
     */
    public String getVehicleLogoRecog() {
      Object ref = vehicleLogoRecog_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          vehicleLogoRecog_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string VehicleLogoRecog = 8;</code>
     */
    public com.google.protobuf.ByteString
        getVehicleLogoRecogBytes() {
      Object ref = vehicleLogoRecog_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        vehicleLogoRecog_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VEHICLESUBLOGORECOG_FIELD_NUMBER = 9;
    private Object vehicleSubLogoRecog_;
    /**
     * <code>required string VehicleSubLogoRecog = 9;</code>
     */
    public boolean hasVehicleSubLogoRecog() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required string VehicleSubLogoRecog = 9;</code>
     */
    public String getVehicleSubLogoRecog() {
      Object ref = vehicleSubLogoRecog_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          vehicleSubLogoRecog_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string VehicleSubLogoRecog = 9;</code>
     */
    public com.google.protobuf.ByteString
        getVehicleSubLogoRecogBytes() {
      Object ref = vehicleSubLogoRecog_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        vehicleSubLogoRecog_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VEHICLEMODEL_FIELD_NUMBER = 10;
    private Object vehicleModel_;
    /**
     * <code>required string VehicleModel = 10;</code>
     */
    public boolean hasVehicleModel() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required string VehicleModel = 10;</code>
     */
    public String getVehicleModel() {
      Object ref = vehicleModel_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          vehicleModel_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string VehicleModel = 10;</code>
     */
    public com.google.protobuf.ByteString
        getVehicleModelBytes() {
      Object ref = vehicleModel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        vehicleModel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VEHICLEATTRIBUTE_FIELD_NUMBER = 11;
    private int vehicleAttribute_;
    /**
     * <code>required int32 VehicleAttribute = 11;</code>
     *
     * <pre>
     *车辆属性
     * </pre>
     */
    public boolean hasVehicleAttribute() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 VehicleAttribute = 11;</code>
     *
     * <pre>
     *车辆属性
     * </pre>
     */
    public int getVehicleAttribute() {
      return vehicleAttribute_;
    }

    private void initFields() {
      index_ = 0;
      vehicleType_ = 0;
      chanIndex_ = 0;
      colorDepth_ = 0;
      color_ = "";
      speed_ = 0F;
      length_ = 0F;
      vehicleLogoRecog_ = "";
      vehicleSubLogoRecog_ = "";
      vehicleModel_ = "";
      vehicleAttribute_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVehicleType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChanIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColorDepth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLength()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVehicleLogoRecog()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVehicleSubLogoRecog()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVehicleModel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVehicleAttribute()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, vehicleType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, chanIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, colorDepth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getColorBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, speed_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, length_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getVehicleLogoRecogBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getVehicleSubLogoRecogBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getVehicleModelBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, vehicleAttribute_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, vehicleType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, chanIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, colorDepth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getColorBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, speed_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, length_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getVehicleLogoRecogBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getVehicleSubLogoRecogBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getVehicleModelBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, vehicleAttribute_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static VehicleInfoModel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VehicleInfoModel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VehicleInfoModel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VehicleInfoModel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VehicleInfoModel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static VehicleInfoModel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static VehicleInfoModel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static VehicleInfoModel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static VehicleInfoModel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static VehicleInfoModel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(VehicleInfoModel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.VehicleInfoModel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.VehicleInfoModel)
        VehicleInfoModelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OffenceSnapDataProtos.internal_static_protocol_VehicleInfoModel_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OffenceSnapDataProtos.internal_static_protocol_VehicleInfoModel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VehicleInfoModel.class, Builder.class);
      }

      // Construct using protocol.OffenceSnapDataProtos.VehicleInfoModel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        vehicleType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        chanIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        colorDepth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        color_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        speed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        length_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        vehicleLogoRecog_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        vehicleSubLogoRecog_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        vehicleModel_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        vehicleAttribute_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OffenceSnapDataProtos.internal_static_protocol_VehicleInfoModel_descriptor;
      }

      public VehicleInfoModel getDefaultInstanceForType() {
        return VehicleInfoModel.getDefaultInstance();
      }

      public VehicleInfoModel build() {
        VehicleInfoModel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public VehicleInfoModel buildPartial() {
        VehicleInfoModel result = new VehicleInfoModel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.vehicleType_ = vehicleType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.chanIndex_ = chanIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.colorDepth_ = colorDepth_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.color_ = color_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.length_ = length_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.vehicleLogoRecog_ = vehicleLogoRecog_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.vehicleSubLogoRecog_ = vehicleSubLogoRecog_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.vehicleModel_ = vehicleModel_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.vehicleAttribute_ = vehicleAttribute_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VehicleInfoModel) {
          return mergeFrom((VehicleInfoModel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VehicleInfoModel other) {
        if (other == VehicleInfoModel.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasVehicleType()) {
          setVehicleType(other.getVehicleType());
        }
        if (other.hasChanIndex()) {
          setChanIndex(other.getChanIndex());
        }
        if (other.hasColorDepth()) {
          setColorDepth(other.getColorDepth());
        }
        if (other.hasColor()) {
          bitField0_ |= 0x00000010;
          color_ = other.color_;
          onChanged();
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasLength()) {
          setLength(other.getLength());
        }
        if (other.hasVehicleLogoRecog()) {
          bitField0_ |= 0x00000080;
          vehicleLogoRecog_ = other.vehicleLogoRecog_;
          onChanged();
        }
        if (other.hasVehicleSubLogoRecog()) {
          bitField0_ |= 0x00000100;
          vehicleSubLogoRecog_ = other.vehicleSubLogoRecog_;
          onChanged();
        }
        if (other.hasVehicleModel()) {
          bitField0_ |= 0x00000200;
          vehicleModel_ = other.vehicleModel_;
          onChanged();
        }
        if (other.hasVehicleAttribute()) {
          setVehicleAttribute(other.getVehicleAttribute());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIndex()) {
          
          return false;
        }
        if (!hasVehicleType()) {
          
          return false;
        }
        if (!hasChanIndex()) {
          
          return false;
        }
        if (!hasColorDepth()) {
          
          return false;
        }
        if (!hasColor()) {
          
          return false;
        }
        if (!hasSpeed()) {
          
          return false;
        }
        if (!hasLength()) {
          
          return false;
        }
        if (!hasVehicleLogoRecog()) {
          
          return false;
        }
        if (!hasVehicleSubLogoRecog()) {
          
          return false;
        }
        if (!hasVehicleModel()) {
          
          return false;
        }
        if (!hasVehicleAttribute()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VehicleInfoModel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VehicleInfoModel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int index_ ;
      /**
       * <code>required int32 Index = 1;</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 Index = 1;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>required int32 Index = 1;</code>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000001;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 Index = 1;</code>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }

      private int vehicleType_ ;
      /**
       * <code>required int32 VehicleType = 2;</code>
       */
      public boolean hasVehicleType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 VehicleType = 2;</code>
       */
      public int getVehicleType() {
        return vehicleType_;
      }
      /**
       * <code>required int32 VehicleType = 2;</code>
       */
      public Builder setVehicleType(int value) {
        bitField0_ |= 0x00000002;
        vehicleType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 VehicleType = 2;</code>
       */
      public Builder clearVehicleType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        vehicleType_ = 0;
        onChanged();
        return this;
      }

      private int chanIndex_ ;
      /**
       * <code>required int32 ChanIndex = 3;</code>
       */
      public boolean hasChanIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 ChanIndex = 3;</code>
       */
      public int getChanIndex() {
        return chanIndex_;
      }
      /**
       * <code>required int32 ChanIndex = 3;</code>
       */
      public Builder setChanIndex(int value) {
        bitField0_ |= 0x00000004;
        chanIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ChanIndex = 3;</code>
       */
      public Builder clearChanIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        chanIndex_ = 0;
        onChanged();
        return this;
      }

      private int colorDepth_ ;
      /**
       * <code>required int32 ColorDepth = 4;</code>
       */
      public boolean hasColorDepth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 ColorDepth = 4;</code>
       */
      public int getColorDepth() {
        return colorDepth_;
      }
      /**
       * <code>required int32 ColorDepth = 4;</code>
       */
      public Builder setColorDepth(int value) {
        bitField0_ |= 0x00000008;
        colorDepth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ColorDepth = 4;</code>
       */
      public Builder clearColorDepth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        colorDepth_ = 0;
        onChanged();
        return this;
      }

      private Object color_ = "";
      /**
       * <code>required string Color = 5;</code>
       */
      public boolean hasColor() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string Color = 5;</code>
       */
      public String getColor() {
        Object ref = color_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            color_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string Color = 5;</code>
       */
      public com.google.protobuf.ByteString
          getColorBytes() {
        Object ref = color_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          color_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string Color = 5;</code>
       */
      public Builder setColor(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        color_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string Color = 5;</code>
       */
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000010);
        color_ = getDefaultInstance().getColor();
        onChanged();
        return this;
      }
      /**
       * <code>required string Color = 5;</code>
       */
      public Builder setColorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        color_ = value;
        onChanged();
        return this;
      }

      private float speed_ ;
      /**
       * <code>required float Speed = 6;</code>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required float Speed = 6;</code>
       */
      public float getSpeed() {
        return speed_;
      }
      /**
       * <code>required float Speed = 6;</code>
       */
      public Builder setSpeed(float value) {
        bitField0_ |= 0x00000020;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float Speed = 6;</code>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000020);
        speed_ = 0F;
        onChanged();
        return this;
      }

      private float length_ ;
      /**
       * <code>required float Length = 7;</code>
       */
      public boolean hasLength() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required float Length = 7;</code>
       */
      public float getLength() {
        return length_;
      }
      /**
       * <code>required float Length = 7;</code>
       */
      public Builder setLength(float value) {
        bitField0_ |= 0x00000040;
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float Length = 7;</code>
       */
      public Builder clearLength() {
        bitField0_ = (bitField0_ & ~0x00000040);
        length_ = 0F;
        onChanged();
        return this;
      }

      private Object vehicleLogoRecog_ = "";
      /**
       * <code>required string VehicleLogoRecog = 8;</code>
       */
      public boolean hasVehicleLogoRecog() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required string VehicleLogoRecog = 8;</code>
       */
      public String getVehicleLogoRecog() {
        Object ref = vehicleLogoRecog_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            vehicleLogoRecog_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string VehicleLogoRecog = 8;</code>
       */
      public com.google.protobuf.ByteString
          getVehicleLogoRecogBytes() {
        Object ref = vehicleLogoRecog_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          vehicleLogoRecog_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string VehicleLogoRecog = 8;</code>
       */
      public Builder setVehicleLogoRecog(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        vehicleLogoRecog_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string VehicleLogoRecog = 8;</code>
       */
      public Builder clearVehicleLogoRecog() {
        bitField0_ = (bitField0_ & ~0x00000080);
        vehicleLogoRecog_ = getDefaultInstance().getVehicleLogoRecog();
        onChanged();
        return this;
      }
      /**
       * <code>required string VehicleLogoRecog = 8;</code>
       */
      public Builder setVehicleLogoRecogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        vehicleLogoRecog_ = value;
        onChanged();
        return this;
      }

      private Object vehicleSubLogoRecog_ = "";
      /**
       * <code>required string VehicleSubLogoRecog = 9;</code>
       */
      public boolean hasVehicleSubLogoRecog() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required string VehicleSubLogoRecog = 9;</code>
       */
      public String getVehicleSubLogoRecog() {
        Object ref = vehicleSubLogoRecog_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            vehicleSubLogoRecog_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string VehicleSubLogoRecog = 9;</code>
       */
      public com.google.protobuf.ByteString
          getVehicleSubLogoRecogBytes() {
        Object ref = vehicleSubLogoRecog_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          vehicleSubLogoRecog_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string VehicleSubLogoRecog = 9;</code>
       */
      public Builder setVehicleSubLogoRecog(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        vehicleSubLogoRecog_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string VehicleSubLogoRecog = 9;</code>
       */
      public Builder clearVehicleSubLogoRecog() {
        bitField0_ = (bitField0_ & ~0x00000100);
        vehicleSubLogoRecog_ = getDefaultInstance().getVehicleSubLogoRecog();
        onChanged();
        return this;
      }
      /**
       * <code>required string VehicleSubLogoRecog = 9;</code>
       */
      public Builder setVehicleSubLogoRecogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        vehicleSubLogoRecog_ = value;
        onChanged();
        return this;
      }

      private Object vehicleModel_ = "";
      /**
       * <code>required string VehicleModel = 10;</code>
       */
      public boolean hasVehicleModel() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required string VehicleModel = 10;</code>
       */
      public String getVehicleModel() {
        Object ref = vehicleModel_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            vehicleModel_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string VehicleModel = 10;</code>
       */
      public com.google.protobuf.ByteString
          getVehicleModelBytes() {
        Object ref = vehicleModel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          vehicleModel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string VehicleModel = 10;</code>
       */
      public Builder setVehicleModel(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        vehicleModel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string VehicleModel = 10;</code>
       */
      public Builder clearVehicleModel() {
        bitField0_ = (bitField0_ & ~0x00000200);
        vehicleModel_ = getDefaultInstance().getVehicleModel();
        onChanged();
        return this;
      }
      /**
       * <code>required string VehicleModel = 10;</code>
       */
      public Builder setVehicleModelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        vehicleModel_ = value;
        onChanged();
        return this;
      }

      private int vehicleAttribute_ ;
      /**
       * <code>required int32 VehicleAttribute = 11;</code>
       *
       * <pre>
       *车辆属性
       * </pre>
       */
      public boolean hasVehicleAttribute() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 VehicleAttribute = 11;</code>
       *
       * <pre>
       *车辆属性
       * </pre>
       */
      public int getVehicleAttribute() {
        return vehicleAttribute_;
      }
      /**
       * <code>required int32 VehicleAttribute = 11;</code>
       *
       * <pre>
       *车辆属性
       * </pre>
       */
      public Builder setVehicleAttribute(int value) {
        bitField0_ |= 0x00000400;
        vehicleAttribute_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 VehicleAttribute = 11;</code>
       *
       * <pre>
       *车辆属性
       * </pre>
       */
      public Builder clearVehicleAttribute() {
        bitField0_ = (bitField0_ & ~0x00000400);
        vehicleAttribute_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.VehicleInfoModel)
    }

    static {
      defaultInstance = new VehicleInfoModel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protocol.VehicleInfoModel)
  }

  public interface PlateRectModelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.PlateRectModel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 X = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required int32 X = 1;</code>
     */
    int getX();

    /**
     * <code>required int32 Y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required int32 Y = 2;</code>
     */
    int getY();

    /**
     * <code>required int32 Width = 3;</code>
     */
    boolean hasWidth();
    /**
     * <code>required int32 Width = 3;</code>
     */
    int getWidth();

    /**
     * <code>required int32 Height = 4;</code>
     */
    boolean hasHeight();
    /**
     * <code>required int32 Height = 4;</code>
     */
    int getHeight();
  }
  /**
   * Protobuf type {@code protocol.PlateRectModel}
   */
  public static final class PlateRectModel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol.PlateRectModel)
      PlateRectModelOrBuilder {
    // Use PlateRectModel.newBuilder() to construct.
    private PlateRectModel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlateRectModel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlateRectModel defaultInstance;
    public static PlateRectModel getDefaultInstance() {
      return defaultInstance;
    }

    public PlateRectModel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlateRectModel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              width_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              height_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OffenceSnapDataProtos.internal_static_protocol_PlateRectModel_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OffenceSnapDataProtos.internal_static_protocol_PlateRectModel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PlateRectModel.class, Builder.class);
    }

    public static com.google.protobuf.Parser<PlateRectModel> PARSER =
        new com.google.protobuf.AbstractParser<PlateRectModel>() {
      public PlateRectModel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlateRectModel(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<PlateRectModel> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>required int32 X = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 X = 1;</code>
     */
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>required int32 Y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 Y = 2;</code>
     */
    public int getY() {
      return y_;
    }

    public static final int WIDTH_FIELD_NUMBER = 3;
    private int width_;
    /**
     * <code>required int32 Width = 3;</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 Width = 3;</code>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_;
    /**
     * <code>required int32 Height = 4;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 Height = 4;</code>
     */
    public int getHeight() {
      return height_;
    }

    private void initFields() {
      x_ = 0;
      y_ = 0;
      width_ = 0;
      height_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, width_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, height_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, width_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, height_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static PlateRectModel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlateRectModel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlateRectModel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlateRectModel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlateRectModel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PlateRectModel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static PlateRectModel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static PlateRectModel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static PlateRectModel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PlateRectModel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(PlateRectModel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.PlateRectModel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.PlateRectModel)
        PlateRectModelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OffenceSnapDataProtos.internal_static_protocol_PlateRectModel_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OffenceSnapDataProtos.internal_static_protocol_PlateRectModel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PlateRectModel.class, Builder.class);
      }

      // Construct using protocol.OffenceSnapDataProtos.PlateRectModel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OffenceSnapDataProtos.internal_static_protocol_PlateRectModel_descriptor;
      }

      public PlateRectModel getDefaultInstanceForType() {
        return PlateRectModel.getDefaultInstance();
      }

      public PlateRectModel build() {
        PlateRectModel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PlateRectModel buildPartial() {
        PlateRectModel result = new PlateRectModel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.height_ = height_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PlateRectModel) {
          return mergeFrom((PlateRectModel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PlateRectModel other) {
        if (other == PlateRectModel.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasWidth()) {
          
          return false;
        }
        if (!hasHeight()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PlateRectModel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PlateRectModel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int x_ ;
      /**
       * <code>required int32 X = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 X = 1;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>required int32 X = 1;</code>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 X = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <code>required int32 Y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 Y = 2;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>required int32 Y = 2;</code>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 Y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <code>required int32 Width = 3;</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 Width = 3;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>required int32 Width = 3;</code>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000004;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 Width = 3;</code>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <code>required int32 Height = 4;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 Height = 4;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>required int32 Height = 4;</code>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000008;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 Height = 4;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        height_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.PlateRectModel)
    }

    static {
      defaultInstance = new PlateRectModel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protocol.PlateRectModel)
  }

  public interface PicInfoModelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.PicInfoModel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 Type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required int32 Type = 1;</code>
     */
    int getType();

    /**
     * <code>required int32 PicRecogMode = 2;</code>
     */
    boolean hasPicRecogMode();
    /**
     * <code>required int32 PicRecogMode = 2;</code>
     */
    int getPicRecogMode();

    /**
     * <code>required int32 RedLightTime = 3;</code>
     */
    boolean hasRedLightTime();
    /**
     * <code>required int32 RedLightTime = 3;</code>
     */
    int getRedLightTime();

    /**
     * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
     */
    boolean hasPlateRect();
    /**
     * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
     */
    PlateRectModel getPlateRect();
    /**
     * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
     */
    PlateRectModelOrBuilder getPlateRectOrBuilder();

    /**
     * <code>required bytes Data = 5;</code>
     */
    boolean hasData();
    /**
     * <code>required bytes Data = 5;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code protocol.PicInfoModel}
   */
  public static final class PicInfoModel extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol.PicInfoModel)
      PicInfoModelOrBuilder {
    // Use PicInfoModel.newBuilder() to construct.
    private PicInfoModel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PicInfoModel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PicInfoModel defaultInstance;
    public static PicInfoModel getDefaultInstance() {
      return defaultInstance;
    }

    public PicInfoModel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PicInfoModel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              picRecogMode_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              redLightTime_ = input.readInt32();
              break;
            }
            case 34: {
              PlateRectModel.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = plateRect_.toBuilder();
              }
              plateRect_ = input.readMessage(PlateRectModel.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(plateRect_);
                plateRect_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OffenceSnapDataProtos.internal_static_protocol_PicInfoModel_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OffenceSnapDataProtos.internal_static_protocol_PicInfoModel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PicInfoModel.class, Builder.class);
    }

    public static com.google.protobuf.Parser<PicInfoModel> PARSER =
        new com.google.protobuf.AbstractParser<PicInfoModel>() {
      public PicInfoModel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PicInfoModel(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<PicInfoModel> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 Type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 Type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int PICRECOGMODE_FIELD_NUMBER = 2;
    private int picRecogMode_;
    /**
     * <code>required int32 PicRecogMode = 2;</code>
     */
    public boolean hasPicRecogMode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 PicRecogMode = 2;</code>
     */
    public int getPicRecogMode() {
      return picRecogMode_;
    }

    public static final int REDLIGHTTIME_FIELD_NUMBER = 3;
    private int redLightTime_;
    /**
     * <code>required int32 RedLightTime = 3;</code>
     */
    public boolean hasRedLightTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 RedLightTime = 3;</code>
     */
    public int getRedLightTime() {
      return redLightTime_;
    }

    public static final int PLATERECT_FIELD_NUMBER = 4;
    private PlateRectModel plateRect_;
    /**
     * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
     */
    public boolean hasPlateRect() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
     */
    public PlateRectModel getPlateRect() {
      return plateRect_;
    }
    /**
     * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
     */
    public PlateRectModelOrBuilder getPlateRectOrBuilder() {
      return plateRect_;
    }

    public static final int DATA_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes Data = 5;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bytes Data = 5;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      type_ = 0;
      picRecogMode_ = 0;
      redLightTime_ = 0;
      plateRect_ = PlateRectModel.getDefaultInstance();
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPicRecogMode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRedLightTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlateRect()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPlateRect().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, picRecogMode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, redLightTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, plateRect_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, picRecogMode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, redLightTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, plateRect_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static PicInfoModel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PicInfoModel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PicInfoModel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PicInfoModel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PicInfoModel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PicInfoModel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static PicInfoModel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static PicInfoModel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static PicInfoModel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static PicInfoModel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(PicInfoModel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.PicInfoModel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.PicInfoModel)
        PicInfoModelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OffenceSnapDataProtos.internal_static_protocol_PicInfoModel_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OffenceSnapDataProtos.internal_static_protocol_PicInfoModel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PicInfoModel.class, Builder.class);
      }

      // Construct using protocol.OffenceSnapDataProtos.PicInfoModel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlateRectFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        picRecogMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        redLightTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (plateRectBuilder_ == null) {
          plateRect_ = PlateRectModel.getDefaultInstance();
        } else {
          plateRectBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OffenceSnapDataProtos.internal_static_protocol_PicInfoModel_descriptor;
      }

      public PicInfoModel getDefaultInstanceForType() {
        return PicInfoModel.getDefaultInstance();
      }

      public PicInfoModel build() {
        PicInfoModel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PicInfoModel buildPartial() {
        PicInfoModel result = new PicInfoModel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.picRecogMode_ = picRecogMode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.redLightTime_ = redLightTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (plateRectBuilder_ == null) {
          result.plateRect_ = plateRect_;
        } else {
          result.plateRect_ = plateRectBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PicInfoModel) {
          return mergeFrom((PicInfoModel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PicInfoModel other) {
        if (other == PicInfoModel.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPicRecogMode()) {
          setPicRecogMode(other.getPicRecogMode());
        }
        if (other.hasRedLightTime()) {
          setRedLightTime(other.getRedLightTime());
        }
        if (other.hasPlateRect()) {
          mergePlateRect(other.getPlateRect());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasPicRecogMode()) {
          
          return false;
        }
        if (!hasRedLightTime()) {
          
          return false;
        }
        if (!hasPlateRect()) {
          
          return false;
        }
        if (!hasData()) {
          
          return false;
        }
        if (!getPlateRect().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PicInfoModel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PicInfoModel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <code>required int32 Type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 Type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 Type = 1;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 Type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private int picRecogMode_ ;
      /**
       * <code>required int32 PicRecogMode = 2;</code>
       */
      public boolean hasPicRecogMode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 PicRecogMode = 2;</code>
       */
      public int getPicRecogMode() {
        return picRecogMode_;
      }
      /**
       * <code>required int32 PicRecogMode = 2;</code>
       */
      public Builder setPicRecogMode(int value) {
        bitField0_ |= 0x00000002;
        picRecogMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 PicRecogMode = 2;</code>
       */
      public Builder clearPicRecogMode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        picRecogMode_ = 0;
        onChanged();
        return this;
      }

      private int redLightTime_ ;
      /**
       * <code>required int32 RedLightTime = 3;</code>
       */
      public boolean hasRedLightTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 RedLightTime = 3;</code>
       */
      public int getRedLightTime() {
        return redLightTime_;
      }
      /**
       * <code>required int32 RedLightTime = 3;</code>
       */
      public Builder setRedLightTime(int value) {
        bitField0_ |= 0x00000004;
        redLightTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 RedLightTime = 3;</code>
       */
      public Builder clearRedLightTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        redLightTime_ = 0;
        onChanged();
        return this;
      }

      private PlateRectModel plateRect_ = PlateRectModel.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          PlateRectModel, PlateRectModel.Builder, PlateRectModelOrBuilder> plateRectBuilder_;
      /**
       * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
       */
      public boolean hasPlateRect() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
       */
      public PlateRectModel getPlateRect() {
        if (plateRectBuilder_ == null) {
          return plateRect_;
        } else {
          return plateRectBuilder_.getMessage();
        }
      }
      /**
       * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
       */
      public Builder setPlateRect(PlateRectModel value) {
        if (plateRectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          plateRect_ = value;
          onChanged();
        } else {
          plateRectBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
       */
      public Builder setPlateRect(
          PlateRectModel.Builder builderForValue) {
        if (plateRectBuilder_ == null) {
          plateRect_ = builderForValue.build();
          onChanged();
        } else {
          plateRectBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
       */
      public Builder mergePlateRect(PlateRectModel value) {
        if (plateRectBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              plateRect_ != PlateRectModel.getDefaultInstance()) {
            plateRect_ =
              PlateRectModel.newBuilder(plateRect_).mergeFrom(value).buildPartial();
          } else {
            plateRect_ = value;
          }
          onChanged();
        } else {
          plateRectBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
       */
      public Builder clearPlateRect() {
        if (plateRectBuilder_ == null) {
          plateRect_ = PlateRectModel.getDefaultInstance();
          onChanged();
        } else {
          plateRectBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
       */
      public PlateRectModel.Builder getPlateRectBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getPlateRectFieldBuilder().getBuilder();
      }
      /**
       * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
       */
      public PlateRectModelOrBuilder getPlateRectOrBuilder() {
        if (plateRectBuilder_ != null) {
          return plateRectBuilder_.getMessageOrBuilder();
        } else {
          return plateRect_;
        }
      }
      /**
       * <code>required .protocol.PlateRectModel PlateRect = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          PlateRectModel, PlateRectModel.Builder, PlateRectModelOrBuilder>
          getPlateRectFieldBuilder() {
        if (plateRectBuilder_ == null) {
          plateRectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              PlateRectModel, PlateRectModel.Builder, PlateRectModelOrBuilder>(
                  getPlateRect(),
                  getParentForChildren(),
                  isClean());
          plateRect_ = null;
        }
        return plateRectBuilder_;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes Data = 5;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bytes Data = 5;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes Data = 5;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes Data = 5;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000010);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.PicInfoModel)
    }

    static {
      defaultInstance = new PicInfoModel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protocol.PicInfoModel)
  }

  public interface OffenceSnapDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.OffenceSnapData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string Id = 1;</code>
     *
     * <pre>
     *设备编号
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required string Id = 1;</code>
     *
     * <pre>
     *设备编号
     * </pre>
     */
    String getId();
    /**
     * <code>required string Id = 1;</code>
     *
     * <pre>
     *设备编号
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>required int32 DriveChan = 2;</code>
     *
     * <pre>
     *车道数量
     * </pre>
     */
    boolean hasDriveChan();
    /**
     * <code>required int32 DriveChan = 2;</code>
     *
     * <pre>
     *车道数量
     * </pre>
     */
    int getDriveChan();

    /**
     * <code>required int32 IllegalType = 5;</code>
     *
     * <pre>
     *违法类型
     * </pre>
     */
    boolean hasIllegalType();
    /**
     * <code>required int32 IllegalType = 5;</code>
     *
     * <pre>
     *违法类型
     * </pre>
     */
    int getIllegalType();

    /**
     * <code>required string IllegalSubType = 6;</code>
     *
     * <pre>
     *违法子类型
     * </pre>
     */
    boolean hasIllegalSubType();
    /**
     * <code>required string IllegalSubType = 6;</code>
     *
     * <pre>
     *违法子类型
     * </pre>
     */
    String getIllegalSubType();
    /**
     * <code>required string IllegalSubType = 6;</code>
     *
     * <pre>
     *违法子类型
     * </pre>
     */
    com.google.protobuf.ByteString
        getIllegalSubTypeBytes();

    /**
     * <code>required int32 SpeedLimit = 9;</code>
     *
     * <pre>
     *限速值
     * </pre>
     */
    boolean hasSpeedLimit();
    /**
     * <code>required int32 SpeedLimit = 9;</code>
     *
     * <pre>
     *限速值
     * </pre>
     */
    int getSpeedLimit();

    /**
     * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
     */
    boolean hasPlateInfo();
    /**
     * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
     */
    PlateInfoModel getPlateInfo();
    /**
     * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
     */
    PlateInfoModelOrBuilder getPlateInfoOrBuilder();

    /**
     * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
     */
    boolean hasVehicleInfo();
    /**
     * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
     */
    VehicleInfoModel getVehicleInfo();
    /**
     * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
     */
    VehicleInfoModelOrBuilder getVehicleInfoOrBuilder();

    /**
     * <code>required string MonitoringSiteID = 12;</code>
     *
     * <pre>
     *监测点
     * </pre>
     */
    boolean hasMonitoringSiteID();
    /**
     * <code>required string MonitoringSiteID = 12;</code>
     *
     * <pre>
     *监测点
     * </pre>
     */
    String getMonitoringSiteID();
    /**
     * <code>required string MonitoringSiteID = 12;</code>
     *
     * <pre>
     *监测点
     * </pre>
     */
    com.google.protobuf.ByteString
        getMonitoringSiteIDBytes();

    /**
     * <code>required int32 Dir = 13;</code>
     *
     * <pre>
     *方向
     * </pre>
     */
    boolean hasDir();
    /**
     * <code>required int32 Dir = 13;</code>
     *
     * <pre>
     *方向
     * </pre>
     */
    int getDir();

    /**
     * <code>required int32 DetectType = 14;</code>
     *
     * <pre>
     *检测方式
     * </pre>
     */
    boolean hasDetectType();
    /**
     * <code>required int32 DetectType = 14;</code>
     *
     * <pre>
     *检测方式
     * </pre>
     */
    int getDetectType();

    /**
     * <code>required int32 PilotSafebelt = 15;</code>
     */
    boolean hasPilotSafebelt();
    /**
     * <code>required int32 PilotSafebelt = 15;</code>
     */
    int getPilotSafebelt();

    /**
     * <code>required int32 CopilotSafebelt = 16;</code>
     */
    boolean hasCopilotSafebelt();
    /**
     * <code>required int32 CopilotSafebelt = 16;</code>
     */
    int getCopilotSafebelt();

    /**
     * <code>required int32 PilotSubVisor = 17;</code>
     */
    boolean hasPilotSubVisor();
    /**
     * <code>required int32 PilotSubVisor = 17;</code>
     */
    int getPilotSubVisor();

    /**
     * <code>required int32 CopilotSubVisor = 18;</code>
     */
    boolean hasCopilotSubVisor();
    /**
     * <code>required int32 CopilotSubVisor = 18;</code>
     */
    int getCopilotSubVisor();

    /**
     * <code>required int32 PilotCall = 19;</code>
     */
    boolean hasPilotCall();
    /**
     * <code>required int32 PilotCall = 19;</code>
     */
    int getPilotCall();

    /**
     * <code>required int32 AlarmDataType = 20;</code>
     *
     * <pre>
     *报警类型
     * </pre>
     */
    boolean hasAlarmDataType();
    /**
     * <code>required int32 AlarmDataType = 20;</code>
     *
     * <pre>
     *报警类型
     * </pre>
     */
    int getAlarmDataType();

    /**
     * <code>required string Time = 21;</code>
     *
     * <pre>
     *过车时间
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>required string Time = 21;</code>
     *
     * <pre>
     *过车时间
     * </pre>
     */
    String getTime();
    /**
     * <code>required string Time = 21;</code>
     *
     * <pre>
     *过车时间
     * </pre>
     */
    com.google.protobuf.ByteString
        getTimeBytes();

    /**
     * <code>required int32 PicNum = 23;</code>
     *
     * <pre>
     *图片数量
     * </pre>
     */
    boolean hasPicNum();
    /**
     * <code>required int32 PicNum = 23;</code>
     *
     * <pre>
     *图片数量
     * </pre>
     */
    int getPicNum();

    /**
     * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
     *
     * <pre>
     *图片信息
     * </pre>
     */
    java.util.List<PicInfoModel>
        getPicInfoList();
    /**
     * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
     *
     * <pre>
     *图片信息
     * </pre>
     */
    PicInfoModel getPicInfo(int index);
    /**
     * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
     *
     * <pre>
     *图片信息
     * </pre>
     */
    int getPicInfoCount();
    /**
     * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
     *
     * <pre>
     *图片信息
     * </pre>
     */
    java.util.List<? extends PicInfoModelOrBuilder>
        getPicInfoOrBuilderList();
    /**
     * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
     *
     * <pre>
     *图片信息
     * </pre>
     */
    PicInfoModelOrBuilder getPicInfoOrBuilder(
            int index);

    /**
     * <code>optional int32 Validity = 25;</code>
     *
     * <pre>
     *数据有效性 0：无效 1：有效
     * </pre>
     */
    boolean hasValidity();
    /**
     * <code>optional int32 Validity = 25;</code>
     *
     * <pre>
     *数据有效性 0：无效 1：有效
     * </pre>
     */
    int getValidity();

    /**
     * <code>optional int32 WaitedLength = 26;</code>
     *
     * <pre>
     *排队长度
     * </pre>
     */
    boolean hasWaitedLength();
    /**
     * <code>optional int32 WaitedLength = 26;</code>
     *
     * <pre>
     *排队长度
     * </pre>
     */
    int getWaitedLength();
  }
  /**
   * Protobuf type {@code protocol.OffenceSnapData}
   */
  public static final class OffenceSnapData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protocol.OffenceSnapData)
      OffenceSnapDataOrBuilder {
    // Use OffenceSnapData.newBuilder() to construct.
    private OffenceSnapData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OffenceSnapData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OffenceSnapData defaultInstance;
    public static OffenceSnapData getDefaultInstance() {
      return defaultInstance;
    }

    public OffenceSnapData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OffenceSnapData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              driveChan_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              illegalType_ = input.readInt32();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              illegalSubType_ = bs;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000010;
              speedLimit_ = input.readInt32();
              break;
            }
            case 82: {
              PlateInfoModel.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = plateInfo_.toBuilder();
              }
              plateInfo_ = input.readMessage(PlateInfoModel.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(plateInfo_);
                plateInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 90: {
              VehicleInfoModel.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = vehicleInfo_.toBuilder();
              }
              vehicleInfo_ = input.readMessage(VehicleInfoModel.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(vehicleInfo_);
                vehicleInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              monitoringSiteID_ = bs;
              break;
            }
            case 104: {
              bitField0_ |= 0x00000100;
              dir_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000200;
              detectType_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000400;
              pilotSafebelt_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000800;
              copilotSafebelt_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00001000;
              pilotSubVisor_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00002000;
              copilotSubVisor_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00004000;
              pilotCall_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00008000;
              alarmDataType_ = input.readInt32();
              break;
            }
            case 170: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00010000;
              time_ = bs;
              break;
            }
            case 184: {
              bitField0_ |= 0x00020000;
              picNum_ = input.readInt32();
              break;
            }
            case 194: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                picInfo_ = new java.util.ArrayList<PicInfoModel>();
                mutable_bitField0_ |= 0x00040000;
              }
              picInfo_.add(input.readMessage(PicInfoModel.PARSER, extensionRegistry));
              break;
            }
            case 200: {
              bitField0_ |= 0x00040000;
              validity_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x00080000;
              waitedLength_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          picInfo_ = java.util.Collections.unmodifiableList(picInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OffenceSnapDataProtos.internal_static_protocol_OffenceSnapData_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OffenceSnapDataProtos.internal_static_protocol_OffenceSnapData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OffenceSnapData.class, Builder.class);
    }

    public static com.google.protobuf.Parser<OffenceSnapData> PARSER =
        new com.google.protobuf.AbstractParser<OffenceSnapData>() {
      public OffenceSnapData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OffenceSnapData(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<OffenceSnapData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private Object id_;
    /**
     * <code>required string Id = 1;</code>
     *
     * <pre>
     *设备编号
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string Id = 1;</code>
     *
     * <pre>
     *设备编号
     * </pre>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string Id = 1;</code>
     *
     * <pre>
     *设备编号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DRIVECHAN_FIELD_NUMBER = 2;
    private int driveChan_;
    /**
     * <code>required int32 DriveChan = 2;</code>
     *
     * <pre>
     *车道数量
     * </pre>
     */
    public boolean hasDriveChan() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 DriveChan = 2;</code>
     *
     * <pre>
     *车道数量
     * </pre>
     */
    public int getDriveChan() {
      return driveChan_;
    }

    public static final int ILLEGALTYPE_FIELD_NUMBER = 5;
    private int illegalType_;
    /**
     * <code>required int32 IllegalType = 5;</code>
     *
     * <pre>
     *违法类型
     * </pre>
     */
    public boolean hasIllegalType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 IllegalType = 5;</code>
     *
     * <pre>
     *违法类型
     * </pre>
     */
    public int getIllegalType() {
      return illegalType_;
    }

    public static final int ILLEGALSUBTYPE_FIELD_NUMBER = 6;
    private Object illegalSubType_;
    /**
     * <code>required string IllegalSubType = 6;</code>
     *
     * <pre>
     *违法子类型
     * </pre>
     */
    public boolean hasIllegalSubType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string IllegalSubType = 6;</code>
     *
     * <pre>
     *违法子类型
     * </pre>
     */
    public String getIllegalSubType() {
      Object ref = illegalSubType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          illegalSubType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string IllegalSubType = 6;</code>
     *
     * <pre>
     *违法子类型
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIllegalSubTypeBytes() {
      Object ref = illegalSubType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        illegalSubType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPEEDLIMIT_FIELD_NUMBER = 9;
    private int speedLimit_;
    /**
     * <code>required int32 SpeedLimit = 9;</code>
     *
     * <pre>
     *限速值
     * </pre>
     */
    public boolean hasSpeedLimit() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 SpeedLimit = 9;</code>
     *
     * <pre>
     *限速值
     * </pre>
     */
    public int getSpeedLimit() {
      return speedLimit_;
    }

    public static final int PLATEINFO_FIELD_NUMBER = 10;
    private PlateInfoModel plateInfo_;
    /**
     * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
     */
    public boolean hasPlateInfo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
     */
    public PlateInfoModel getPlateInfo() {
      return plateInfo_;
    }
    /**
     * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
     */
    public PlateInfoModelOrBuilder getPlateInfoOrBuilder() {
      return plateInfo_;
    }

    public static final int VEHICLEINFO_FIELD_NUMBER = 11;
    private VehicleInfoModel vehicleInfo_;
    /**
     * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
     */
    public boolean hasVehicleInfo() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
     */
    public VehicleInfoModel getVehicleInfo() {
      return vehicleInfo_;
    }
    /**
     * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
     */
    public VehicleInfoModelOrBuilder getVehicleInfoOrBuilder() {
      return vehicleInfo_;
    }

    public static final int MONITORINGSITEID_FIELD_NUMBER = 12;
    private Object monitoringSiteID_;
    /**
     * <code>required string MonitoringSiteID = 12;</code>
     *
     * <pre>
     *监测点
     * </pre>
     */
    public boolean hasMonitoringSiteID() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required string MonitoringSiteID = 12;</code>
     *
     * <pre>
     *监测点
     * </pre>
     */
    public String getMonitoringSiteID() {
      Object ref = monitoringSiteID_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          monitoringSiteID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string MonitoringSiteID = 12;</code>
     *
     * <pre>
     *监测点
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMonitoringSiteIDBytes() {
      Object ref = monitoringSiteID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        monitoringSiteID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIR_FIELD_NUMBER = 13;
    private int dir_;
    /**
     * <code>required int32 Dir = 13;</code>
     *
     * <pre>
     *方向
     * </pre>
     */
    public boolean hasDir() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 Dir = 13;</code>
     *
     * <pre>
     *方向
     * </pre>
     */
    public int getDir() {
      return dir_;
    }

    public static final int DETECTTYPE_FIELD_NUMBER = 14;
    private int detectType_;
    /**
     * <code>required int32 DetectType = 14;</code>
     *
     * <pre>
     *检测方式
     * </pre>
     */
    public boolean hasDetectType() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 DetectType = 14;</code>
     *
     * <pre>
     *检测方式
     * </pre>
     */
    public int getDetectType() {
      return detectType_;
    }

    public static final int PILOTSAFEBELT_FIELD_NUMBER = 15;
    private int pilotSafebelt_;
    /**
     * <code>required int32 PilotSafebelt = 15;</code>
     */
    public boolean hasPilotSafebelt() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 PilotSafebelt = 15;</code>
     */
    public int getPilotSafebelt() {
      return pilotSafebelt_;
    }

    public static final int COPILOTSAFEBELT_FIELD_NUMBER = 16;
    private int copilotSafebelt_;
    /**
     * <code>required int32 CopilotSafebelt = 16;</code>
     */
    public boolean hasCopilotSafebelt() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 CopilotSafebelt = 16;</code>
     */
    public int getCopilotSafebelt() {
      return copilotSafebelt_;
    }

    public static final int PILOTSUBVISOR_FIELD_NUMBER = 17;
    private int pilotSubVisor_;
    /**
     * <code>required int32 PilotSubVisor = 17;</code>
     */
    public boolean hasPilotSubVisor() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 PilotSubVisor = 17;</code>
     */
    public int getPilotSubVisor() {
      return pilotSubVisor_;
    }

    public static final int COPILOTSUBVISOR_FIELD_NUMBER = 18;
    private int copilotSubVisor_;
    /**
     * <code>required int32 CopilotSubVisor = 18;</code>
     */
    public boolean hasCopilotSubVisor() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 CopilotSubVisor = 18;</code>
     */
    public int getCopilotSubVisor() {
      return copilotSubVisor_;
    }

    public static final int PILOTCALL_FIELD_NUMBER = 19;
    private int pilotCall_;
    /**
     * <code>required int32 PilotCall = 19;</code>
     */
    public boolean hasPilotCall() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required int32 PilotCall = 19;</code>
     */
    public int getPilotCall() {
      return pilotCall_;
    }

    public static final int ALARMDATATYPE_FIELD_NUMBER = 20;
    private int alarmDataType_;
    /**
     * <code>required int32 AlarmDataType = 20;</code>
     *
     * <pre>
     *报警类型
     * </pre>
     */
    public boolean hasAlarmDataType() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int32 AlarmDataType = 20;</code>
     *
     * <pre>
     *报警类型
     * </pre>
     */
    public int getAlarmDataType() {
      return alarmDataType_;
    }

    public static final int TIME_FIELD_NUMBER = 21;
    private Object time_;
    /**
     * <code>required string Time = 21;</code>
     *
     * <pre>
     *过车时间
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required string Time = 21;</code>
     *
     * <pre>
     *过车时间
     * </pre>
     */
    public String getTime() {
      Object ref = time_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          time_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string Time = 21;</code>
     *
     * <pre>
     *过车时间
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTimeBytes() {
      Object ref = time_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        time_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PICNUM_FIELD_NUMBER = 23;
    private int picNum_;
    /**
     * <code>required int32 PicNum = 23;</code>
     *
     * <pre>
     *图片数量
     * </pre>
     */
    public boolean hasPicNum() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required int32 PicNum = 23;</code>
     *
     * <pre>
     *图片数量
     * </pre>
     */
    public int getPicNum() {
      return picNum_;
    }

    public static final int PICINFO_FIELD_NUMBER = 24;
    private java.util.List<PicInfoModel> picInfo_;
    /**
     * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
     *
     * <pre>
     *图片信息
     * </pre>
     */
    public java.util.List<PicInfoModel> getPicInfoList() {
      return picInfo_;
    }
    /**
     * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
     *
     * <pre>
     *图片信息
     * </pre>
     */
    public java.util.List<? extends PicInfoModelOrBuilder>
        getPicInfoOrBuilderList() {
      return picInfo_;
    }
    /**
     * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
     *
     * <pre>
     *图片信息
     * </pre>
     */
    public int getPicInfoCount() {
      return picInfo_.size();
    }
    /**
     * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
     *
     * <pre>
     *图片信息
     * </pre>
     */
    public PicInfoModel getPicInfo(int index) {
      return picInfo_.get(index);
    }
    /**
     * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
     *
     * <pre>
     *图片信息
     * </pre>
     */
    public PicInfoModelOrBuilder getPicInfoOrBuilder(
        int index) {
      return picInfo_.get(index);
    }

    public static final int VALIDITY_FIELD_NUMBER = 25;
    private int validity_;
    /**
     * <code>optional int32 Validity = 25;</code>
     *
     * <pre>
     *数据有效性 0：无效 1：有效
     * </pre>
     */
    public boolean hasValidity() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 Validity = 25;</code>
     *
     * <pre>
     *数据有效性 0：无效 1：有效
     * </pre>
     */
    public int getValidity() {
      return validity_;
    }

    public static final int WAITEDLENGTH_FIELD_NUMBER = 26;
    private int waitedLength_;
    /**
     * <code>optional int32 WaitedLength = 26;</code>
     *
     * <pre>
     *排队长度
     * </pre>
     */
    public boolean hasWaitedLength() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 WaitedLength = 26;</code>
     *
     * <pre>
     *排队长度
     * </pre>
     */
    public int getWaitedLength() {
      return waitedLength_;
    }

    private void initFields() {
      id_ = "";
      driveChan_ = 0;
      illegalType_ = 0;
      illegalSubType_ = "";
      speedLimit_ = 0;
      plateInfo_ = PlateInfoModel.getDefaultInstance();
      vehicleInfo_ = VehicleInfoModel.getDefaultInstance();
      monitoringSiteID_ = "";
      dir_ = 0;
      detectType_ = 0;
      pilotSafebelt_ = 0;
      copilotSafebelt_ = 0;
      pilotSubVisor_ = 0;
      copilotSubVisor_ = 0;
      pilotCall_ = 0;
      alarmDataType_ = 0;
      time_ = "";
      picNum_ = 0;
      picInfo_ = java.util.Collections.emptyList();
      validity_ = 0;
      waitedLength_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDriveChan()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIllegalType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIllegalSubType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpeedLimit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPlateInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVehicleInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMonitoringSiteID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDir()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDetectType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPilotSafebelt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCopilotSafebelt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPilotSubVisor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCopilotSubVisor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPilotCall()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAlarmDataType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPicNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPlateInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getVehicleInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPicInfoCount(); i++) {
        if (!getPicInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, driveChan_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, illegalType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(6, getIllegalSubTypeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(9, speedLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(10, plateInfo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(11, vehicleInfo_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(12, getMonitoringSiteIDBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(13, dir_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(14, detectType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(15, pilotSafebelt_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(16, copilotSafebelt_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(17, pilotSubVisor_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(18, copilotSubVisor_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(19, pilotCall_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(20, alarmDataType_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(21, getTimeBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(23, picNum_);
      }
      for (int i = 0; i < picInfo_.size(); i++) {
        output.writeMessage(24, picInfo_.get(i));
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(25, validity_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(26, waitedLength_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, driveChan_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, illegalType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getIllegalSubTypeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, speedLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, plateInfo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, vehicleInfo_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getMonitoringSiteIDBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, dir_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, detectType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, pilotSafebelt_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, copilotSafebelt_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, pilotSubVisor_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, copilotSubVisor_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, pilotCall_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, alarmDataType_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(21, getTimeBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, picNum_);
      }
      for (int i = 0; i < picInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, picInfo_.get(i));
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, validity_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, waitedLength_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static OffenceSnapData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OffenceSnapData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OffenceSnapData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OffenceSnapData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OffenceSnapData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static OffenceSnapData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static OffenceSnapData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static OffenceSnapData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static OffenceSnapData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static OffenceSnapData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(OffenceSnapData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.OffenceSnapData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.OffenceSnapData)
        OffenceSnapDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OffenceSnapDataProtos.internal_static_protocol_OffenceSnapData_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OffenceSnapDataProtos.internal_static_protocol_OffenceSnapData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                OffenceSnapData.class, Builder.class);
      }

      // Construct using protocol.OffenceSnapDataProtos.OffenceSnapData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlateInfoFieldBuilder();
          getVehicleInfoFieldBuilder();
          getPicInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        driveChan_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        illegalType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        illegalSubType_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        speedLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (plateInfoBuilder_ == null) {
          plateInfo_ = PlateInfoModel.getDefaultInstance();
        } else {
          plateInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (vehicleInfoBuilder_ == null) {
          vehicleInfo_ = VehicleInfoModel.getDefaultInstance();
        } else {
          vehicleInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        monitoringSiteID_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        dir_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        detectType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        pilotSafebelt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        copilotSafebelt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        pilotSubVisor_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        copilotSubVisor_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        pilotCall_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        alarmDataType_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        time_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        picNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        if (picInfoBuilder_ == null) {
          picInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          picInfoBuilder_.clear();
        }
        validity_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        waitedLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OffenceSnapDataProtos.internal_static_protocol_OffenceSnapData_descriptor;
      }

      public OffenceSnapData getDefaultInstanceForType() {
        return OffenceSnapData.getDefaultInstance();
      }

      public OffenceSnapData build() {
        OffenceSnapData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public OffenceSnapData buildPartial() {
        OffenceSnapData result = new OffenceSnapData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.driveChan_ = driveChan_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.illegalType_ = illegalType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.illegalSubType_ = illegalSubType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.speedLimit_ = speedLimit_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (plateInfoBuilder_ == null) {
          result.plateInfo_ = plateInfo_;
        } else {
          result.plateInfo_ = plateInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (vehicleInfoBuilder_ == null) {
          result.vehicleInfo_ = vehicleInfo_;
        } else {
          result.vehicleInfo_ = vehicleInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.monitoringSiteID_ = monitoringSiteID_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.dir_ = dir_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.detectType_ = detectType_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.pilotSafebelt_ = pilotSafebelt_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.copilotSafebelt_ = copilotSafebelt_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.pilotSubVisor_ = pilotSubVisor_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.copilotSubVisor_ = copilotSubVisor_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.pilotCall_ = pilotCall_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.alarmDataType_ = alarmDataType_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.picNum_ = picNum_;
        if (picInfoBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            picInfo_ = java.util.Collections.unmodifiableList(picInfo_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.picInfo_ = picInfo_;
        } else {
          result.picInfo_ = picInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.validity_ = validity_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.waitedLength_ = waitedLength_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof OffenceSnapData) {
          return mergeFrom((OffenceSnapData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(OffenceSnapData other) {
        if (other == OffenceSnapData.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasDriveChan()) {
          setDriveChan(other.getDriveChan());
        }
        if (other.hasIllegalType()) {
          setIllegalType(other.getIllegalType());
        }
        if (other.hasIllegalSubType()) {
          bitField0_ |= 0x00000008;
          illegalSubType_ = other.illegalSubType_;
          onChanged();
        }
        if (other.hasSpeedLimit()) {
          setSpeedLimit(other.getSpeedLimit());
        }
        if (other.hasPlateInfo()) {
          mergePlateInfo(other.getPlateInfo());
        }
        if (other.hasVehicleInfo()) {
          mergeVehicleInfo(other.getVehicleInfo());
        }
        if (other.hasMonitoringSiteID()) {
          bitField0_ |= 0x00000080;
          monitoringSiteID_ = other.monitoringSiteID_;
          onChanged();
        }
        if (other.hasDir()) {
          setDir(other.getDir());
        }
        if (other.hasDetectType()) {
          setDetectType(other.getDetectType());
        }
        if (other.hasPilotSafebelt()) {
          setPilotSafebelt(other.getPilotSafebelt());
        }
        if (other.hasCopilotSafebelt()) {
          setCopilotSafebelt(other.getCopilotSafebelt());
        }
        if (other.hasPilotSubVisor()) {
          setPilotSubVisor(other.getPilotSubVisor());
        }
        if (other.hasCopilotSubVisor()) {
          setCopilotSubVisor(other.getCopilotSubVisor());
        }
        if (other.hasPilotCall()) {
          setPilotCall(other.getPilotCall());
        }
        if (other.hasAlarmDataType()) {
          setAlarmDataType(other.getAlarmDataType());
        }
        if (other.hasTime()) {
          bitField0_ |= 0x00010000;
          time_ = other.time_;
          onChanged();
        }
        if (other.hasPicNum()) {
          setPicNum(other.getPicNum());
        }
        if (picInfoBuilder_ == null) {
          if (!other.picInfo_.isEmpty()) {
            if (picInfo_.isEmpty()) {
              picInfo_ = other.picInfo_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensurePicInfoIsMutable();
              picInfo_.addAll(other.picInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.picInfo_.isEmpty()) {
            if (picInfoBuilder_.isEmpty()) {
              picInfoBuilder_.dispose();
              picInfoBuilder_ = null;
              picInfo_ = other.picInfo_;
              bitField0_ = (bitField0_ & ~0x00040000);
              picInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPicInfoFieldBuilder() : null;
            } else {
              picInfoBuilder_.addAllMessages(other.picInfo_);
            }
          }
        }
        if (other.hasValidity()) {
          setValidity(other.getValidity());
        }
        if (other.hasWaitedLength()) {
          setWaitedLength(other.getWaitedLength());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasDriveChan()) {
          
          return false;
        }
        if (!hasIllegalType()) {
          
          return false;
        }
        if (!hasIllegalSubType()) {
          
          return false;
        }
        if (!hasSpeedLimit()) {
          
          return false;
        }
        if (!hasPlateInfo()) {
          
          return false;
        }
        if (!hasVehicleInfo()) {
          
          return false;
        }
        if (!hasMonitoringSiteID()) {
          
          return false;
        }
        if (!hasDir()) {
          
          return false;
        }
        if (!hasDetectType()) {
          
          return false;
        }
        if (!hasPilotSafebelt()) {
          
          return false;
        }
        if (!hasCopilotSafebelt()) {
          
          return false;
        }
        if (!hasPilotSubVisor()) {
          
          return false;
        }
        if (!hasCopilotSubVisor()) {
          
          return false;
        }
        if (!hasPilotCall()) {
          
          return false;
        }
        if (!hasAlarmDataType()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        if (!hasPicNum()) {
          
          return false;
        }
        if (!getPlateInfo().isInitialized()) {
          
          return false;
        }
        if (!getVehicleInfo().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getPicInfoCount(); i++) {
          if (!getPicInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        OffenceSnapData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (OffenceSnapData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object id_ = "";
      /**
       * <code>required string Id = 1;</code>
       *
       * <pre>
       *设备编号
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string Id = 1;</code>
       *
       * <pre>
       *设备编号
       * </pre>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string Id = 1;</code>
       *
       * <pre>
       *设备编号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string Id = 1;</code>
       *
       * <pre>
       *设备编号
       * </pre>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string Id = 1;</code>
       *
       * <pre>
       *设备编号
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>required string Id = 1;</code>
       *
       * <pre>
       *设备编号
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private int driveChan_ ;
      /**
       * <code>required int32 DriveChan = 2;</code>
       *
       * <pre>
       *车道数量
       * </pre>
       */
      public boolean hasDriveChan() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 DriveChan = 2;</code>
       *
       * <pre>
       *车道数量
       * </pre>
       */
      public int getDriveChan() {
        return driveChan_;
      }
      /**
       * <code>required int32 DriveChan = 2;</code>
       *
       * <pre>
       *车道数量
       * </pre>
       */
      public Builder setDriveChan(int value) {
        bitField0_ |= 0x00000002;
        driveChan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 DriveChan = 2;</code>
       *
       * <pre>
       *车道数量
       * </pre>
       */
      public Builder clearDriveChan() {
        bitField0_ = (bitField0_ & ~0x00000002);
        driveChan_ = 0;
        onChanged();
        return this;
      }

      private int illegalType_ ;
      /**
       * <code>required int32 IllegalType = 5;</code>
       *
       * <pre>
       *违法类型
       * </pre>
       */
      public boolean hasIllegalType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 IllegalType = 5;</code>
       *
       * <pre>
       *违法类型
       * </pre>
       */
      public int getIllegalType() {
        return illegalType_;
      }
      /**
       * <code>required int32 IllegalType = 5;</code>
       *
       * <pre>
       *违法类型
       * </pre>
       */
      public Builder setIllegalType(int value) {
        bitField0_ |= 0x00000004;
        illegalType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 IllegalType = 5;</code>
       *
       * <pre>
       *违法类型
       * </pre>
       */
      public Builder clearIllegalType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        illegalType_ = 0;
        onChanged();
        return this;
      }

      private Object illegalSubType_ = "";
      /**
       * <code>required string IllegalSubType = 6;</code>
       *
       * <pre>
       *违法子类型
       * </pre>
       */
      public boolean hasIllegalSubType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string IllegalSubType = 6;</code>
       *
       * <pre>
       *违法子类型
       * </pre>
       */
      public String getIllegalSubType() {
        Object ref = illegalSubType_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            illegalSubType_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string IllegalSubType = 6;</code>
       *
       * <pre>
       *违法子类型
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIllegalSubTypeBytes() {
        Object ref = illegalSubType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          illegalSubType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string IllegalSubType = 6;</code>
       *
       * <pre>
       *违法子类型
       * </pre>
       */
      public Builder setIllegalSubType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        illegalSubType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string IllegalSubType = 6;</code>
       *
       * <pre>
       *违法子类型
       * </pre>
       */
      public Builder clearIllegalSubType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        illegalSubType_ = getDefaultInstance().getIllegalSubType();
        onChanged();
        return this;
      }
      /**
       * <code>required string IllegalSubType = 6;</code>
       *
       * <pre>
       *违法子类型
       * </pre>
       */
      public Builder setIllegalSubTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        illegalSubType_ = value;
        onChanged();
        return this;
      }

      private int speedLimit_ ;
      /**
       * <code>required int32 SpeedLimit = 9;</code>
       *
       * <pre>
       *限速值
       * </pre>
       */
      public boolean hasSpeedLimit() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 SpeedLimit = 9;</code>
       *
       * <pre>
       *限速值
       * </pre>
       */
      public int getSpeedLimit() {
        return speedLimit_;
      }
      /**
       * <code>required int32 SpeedLimit = 9;</code>
       *
       * <pre>
       *限速值
       * </pre>
       */
      public Builder setSpeedLimit(int value) {
        bitField0_ |= 0x00000010;
        speedLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 SpeedLimit = 9;</code>
       *
       * <pre>
       *限速值
       * </pre>
       */
      public Builder clearSpeedLimit() {
        bitField0_ = (bitField0_ & ~0x00000010);
        speedLimit_ = 0;
        onChanged();
        return this;
      }

      private PlateInfoModel plateInfo_ = PlateInfoModel.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          PlateInfoModel, PlateInfoModel.Builder, PlateInfoModelOrBuilder> plateInfoBuilder_;
      /**
       * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
       */
      public boolean hasPlateInfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
       */
      public PlateInfoModel getPlateInfo() {
        if (plateInfoBuilder_ == null) {
          return plateInfo_;
        } else {
          return plateInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
       */
      public Builder setPlateInfo(PlateInfoModel value) {
        if (plateInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          plateInfo_ = value;
          onChanged();
        } else {
          plateInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
       */
      public Builder setPlateInfo(
          PlateInfoModel.Builder builderForValue) {
        if (plateInfoBuilder_ == null) {
          plateInfo_ = builderForValue.build();
          onChanged();
        } else {
          plateInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
       */
      public Builder mergePlateInfo(PlateInfoModel value) {
        if (plateInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              plateInfo_ != PlateInfoModel.getDefaultInstance()) {
            plateInfo_ =
              PlateInfoModel.newBuilder(plateInfo_).mergeFrom(value).buildPartial();
          } else {
            plateInfo_ = value;
          }
          onChanged();
        } else {
          plateInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
       */
      public Builder clearPlateInfo() {
        if (plateInfoBuilder_ == null) {
          plateInfo_ = PlateInfoModel.getDefaultInstance();
          onChanged();
        } else {
          plateInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
       */
      public PlateInfoModel.Builder getPlateInfoBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getPlateInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
       */
      public PlateInfoModelOrBuilder getPlateInfoOrBuilder() {
        if (plateInfoBuilder_ != null) {
          return plateInfoBuilder_.getMessageOrBuilder();
        } else {
          return plateInfo_;
        }
      }
      /**
       * <code>required .protocol.PlateInfoModel PlateInfo = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          PlateInfoModel, PlateInfoModel.Builder, PlateInfoModelOrBuilder>
          getPlateInfoFieldBuilder() {
        if (plateInfoBuilder_ == null) {
          plateInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              PlateInfoModel, PlateInfoModel.Builder, PlateInfoModelOrBuilder>(
                  getPlateInfo(),
                  getParentForChildren(),
                  isClean());
          plateInfo_ = null;
        }
        return plateInfoBuilder_;
      }

      private VehicleInfoModel vehicleInfo_ = VehicleInfoModel.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          VehicleInfoModel, VehicleInfoModel.Builder, VehicleInfoModelOrBuilder> vehicleInfoBuilder_;
      /**
       * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
       */
      public boolean hasVehicleInfo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
       */
      public VehicleInfoModel getVehicleInfo() {
        if (vehicleInfoBuilder_ == null) {
          return vehicleInfo_;
        } else {
          return vehicleInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
       */
      public Builder setVehicleInfo(VehicleInfoModel value) {
        if (vehicleInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          vehicleInfo_ = value;
          onChanged();
        } else {
          vehicleInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
       */
      public Builder setVehicleInfo(
          VehicleInfoModel.Builder builderForValue) {
        if (vehicleInfoBuilder_ == null) {
          vehicleInfo_ = builderForValue.build();
          onChanged();
        } else {
          vehicleInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
       */
      public Builder mergeVehicleInfo(VehicleInfoModel value) {
        if (vehicleInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              vehicleInfo_ != VehicleInfoModel.getDefaultInstance()) {
            vehicleInfo_ =
              VehicleInfoModel.newBuilder(vehicleInfo_).mergeFrom(value).buildPartial();
          } else {
            vehicleInfo_ = value;
          }
          onChanged();
        } else {
          vehicleInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
       */
      public Builder clearVehicleInfo() {
        if (vehicleInfoBuilder_ == null) {
          vehicleInfo_ = VehicleInfoModel.getDefaultInstance();
          onChanged();
        } else {
          vehicleInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
       */
      public VehicleInfoModel.Builder getVehicleInfoBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getVehicleInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
       */
      public VehicleInfoModelOrBuilder getVehicleInfoOrBuilder() {
        if (vehicleInfoBuilder_ != null) {
          return vehicleInfoBuilder_.getMessageOrBuilder();
        } else {
          return vehicleInfo_;
        }
      }
      /**
       * <code>required .protocol.VehicleInfoModel VehicleInfo = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          VehicleInfoModel, VehicleInfoModel.Builder, VehicleInfoModelOrBuilder>
          getVehicleInfoFieldBuilder() {
        if (vehicleInfoBuilder_ == null) {
          vehicleInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              VehicleInfoModel, VehicleInfoModel.Builder, VehicleInfoModelOrBuilder>(
                  getVehicleInfo(),
                  getParentForChildren(),
                  isClean());
          vehicleInfo_ = null;
        }
        return vehicleInfoBuilder_;
      }

      private Object monitoringSiteID_ = "";
      /**
       * <code>required string MonitoringSiteID = 12;</code>
       *
       * <pre>
       *监测点
       * </pre>
       */
      public boolean hasMonitoringSiteID() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required string MonitoringSiteID = 12;</code>
       *
       * <pre>
       *监测点
       * </pre>
       */
      public String getMonitoringSiteID() {
        Object ref = monitoringSiteID_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            monitoringSiteID_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string MonitoringSiteID = 12;</code>
       *
       * <pre>
       *监测点
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMonitoringSiteIDBytes() {
        Object ref = monitoringSiteID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          monitoringSiteID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string MonitoringSiteID = 12;</code>
       *
       * <pre>
       *监测点
       * </pre>
       */
      public Builder setMonitoringSiteID(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        monitoringSiteID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string MonitoringSiteID = 12;</code>
       *
       * <pre>
       *监测点
       * </pre>
       */
      public Builder clearMonitoringSiteID() {
        bitField0_ = (bitField0_ & ~0x00000080);
        monitoringSiteID_ = getDefaultInstance().getMonitoringSiteID();
        onChanged();
        return this;
      }
      /**
       * <code>required string MonitoringSiteID = 12;</code>
       *
       * <pre>
       *监测点
       * </pre>
       */
      public Builder setMonitoringSiteIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        monitoringSiteID_ = value;
        onChanged();
        return this;
      }

      private int dir_ ;
      /**
       * <code>required int32 Dir = 13;</code>
       *
       * <pre>
       *方向
       * </pre>
       */
      public boolean hasDir() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 Dir = 13;</code>
       *
       * <pre>
       *方向
       * </pre>
       */
      public int getDir() {
        return dir_;
      }
      /**
       * <code>required int32 Dir = 13;</code>
       *
       * <pre>
       *方向
       * </pre>
       */
      public Builder setDir(int value) {
        bitField0_ |= 0x00000100;
        dir_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 Dir = 13;</code>
       *
       * <pre>
       *方向
       * </pre>
       */
      public Builder clearDir() {
        bitField0_ = (bitField0_ & ~0x00000100);
        dir_ = 0;
        onChanged();
        return this;
      }

      private int detectType_ ;
      /**
       * <code>required int32 DetectType = 14;</code>
       *
       * <pre>
       *检测方式
       * </pre>
       */
      public boolean hasDetectType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 DetectType = 14;</code>
       *
       * <pre>
       *检测方式
       * </pre>
       */
      public int getDetectType() {
        return detectType_;
      }
      /**
       * <code>required int32 DetectType = 14;</code>
       *
       * <pre>
       *检测方式
       * </pre>
       */
      public Builder setDetectType(int value) {
        bitField0_ |= 0x00000200;
        detectType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 DetectType = 14;</code>
       *
       * <pre>
       *检测方式
       * </pre>
       */
      public Builder clearDetectType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        detectType_ = 0;
        onChanged();
        return this;
      }

      private int pilotSafebelt_ ;
      /**
       * <code>required int32 PilotSafebelt = 15;</code>
       */
      public boolean hasPilotSafebelt() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 PilotSafebelt = 15;</code>
       */
      public int getPilotSafebelt() {
        return pilotSafebelt_;
      }
      /**
       * <code>required int32 PilotSafebelt = 15;</code>
       */
      public Builder setPilotSafebelt(int value) {
        bitField0_ |= 0x00000400;
        pilotSafebelt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 PilotSafebelt = 15;</code>
       */
      public Builder clearPilotSafebelt() {
        bitField0_ = (bitField0_ & ~0x00000400);
        pilotSafebelt_ = 0;
        onChanged();
        return this;
      }

      private int copilotSafebelt_ ;
      /**
       * <code>required int32 CopilotSafebelt = 16;</code>
       */
      public boolean hasCopilotSafebelt() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 CopilotSafebelt = 16;</code>
       */
      public int getCopilotSafebelt() {
        return copilotSafebelt_;
      }
      /**
       * <code>required int32 CopilotSafebelt = 16;</code>
       */
      public Builder setCopilotSafebelt(int value) {
        bitField0_ |= 0x00000800;
        copilotSafebelt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 CopilotSafebelt = 16;</code>
       */
      public Builder clearCopilotSafebelt() {
        bitField0_ = (bitField0_ & ~0x00000800);
        copilotSafebelt_ = 0;
        onChanged();
        return this;
      }

      private int pilotSubVisor_ ;
      /**
       * <code>required int32 PilotSubVisor = 17;</code>
       */
      public boolean hasPilotSubVisor() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 PilotSubVisor = 17;</code>
       */
      public int getPilotSubVisor() {
        return pilotSubVisor_;
      }
      /**
       * <code>required int32 PilotSubVisor = 17;</code>
       */
      public Builder setPilotSubVisor(int value) {
        bitField0_ |= 0x00001000;
        pilotSubVisor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 PilotSubVisor = 17;</code>
       */
      public Builder clearPilotSubVisor() {
        bitField0_ = (bitField0_ & ~0x00001000);
        pilotSubVisor_ = 0;
        onChanged();
        return this;
      }

      private int copilotSubVisor_ ;
      /**
       * <code>required int32 CopilotSubVisor = 18;</code>
       */
      public boolean hasCopilotSubVisor() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 CopilotSubVisor = 18;</code>
       */
      public int getCopilotSubVisor() {
        return copilotSubVisor_;
      }
      /**
       * <code>required int32 CopilotSubVisor = 18;</code>
       */
      public Builder setCopilotSubVisor(int value) {
        bitField0_ |= 0x00002000;
        copilotSubVisor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 CopilotSubVisor = 18;</code>
       */
      public Builder clearCopilotSubVisor() {
        bitField0_ = (bitField0_ & ~0x00002000);
        copilotSubVisor_ = 0;
        onChanged();
        return this;
      }

      private int pilotCall_ ;
      /**
       * <code>required int32 PilotCall = 19;</code>
       */
      public boolean hasPilotCall() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int32 PilotCall = 19;</code>
       */
      public int getPilotCall() {
        return pilotCall_;
      }
      /**
       * <code>required int32 PilotCall = 19;</code>
       */
      public Builder setPilotCall(int value) {
        bitField0_ |= 0x00004000;
        pilotCall_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 PilotCall = 19;</code>
       */
      public Builder clearPilotCall() {
        bitField0_ = (bitField0_ & ~0x00004000);
        pilotCall_ = 0;
        onChanged();
        return this;
      }

      private int alarmDataType_ ;
      /**
       * <code>required int32 AlarmDataType = 20;</code>
       *
       * <pre>
       *报警类型
       * </pre>
       */
      public boolean hasAlarmDataType() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 AlarmDataType = 20;</code>
       *
       * <pre>
       *报警类型
       * </pre>
       */
      public int getAlarmDataType() {
        return alarmDataType_;
      }
      /**
       * <code>required int32 AlarmDataType = 20;</code>
       *
       * <pre>
       *报警类型
       * </pre>
       */
      public Builder setAlarmDataType(int value) {
        bitField0_ |= 0x00008000;
        alarmDataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 AlarmDataType = 20;</code>
       *
       * <pre>
       *报警类型
       * </pre>
       */
      public Builder clearAlarmDataType() {
        bitField0_ = (bitField0_ & ~0x00008000);
        alarmDataType_ = 0;
        onChanged();
        return this;
      }

      private Object time_ = "";
      /**
       * <code>required string Time = 21;</code>
       *
       * <pre>
       *过车时间
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required string Time = 21;</code>
       *
       * <pre>
       *过车时间
       * </pre>
       */
      public String getTime() {
        Object ref = time_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            time_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string Time = 21;</code>
       *
       * <pre>
       *过车时间
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string Time = 21;</code>
       *
       * <pre>
       *过车时间
       * </pre>
       */
      public Builder setTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string Time = 21;</code>
       *
       * <pre>
       *过车时间
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00010000);
        time_ = getDefaultInstance().getTime();
        onChanged();
        return this;
      }
      /**
       * <code>required string Time = 21;</code>
       *
       * <pre>
       *过车时间
       * </pre>
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        time_ = value;
        onChanged();
        return this;
      }

      private int picNum_ ;
      /**
       * <code>required int32 PicNum = 23;</code>
       *
       * <pre>
       *图片数量
       * </pre>
       */
      public boolean hasPicNum() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int32 PicNum = 23;</code>
       *
       * <pre>
       *图片数量
       * </pre>
       */
      public int getPicNum() {
        return picNum_;
      }
      /**
       * <code>required int32 PicNum = 23;</code>
       *
       * <pre>
       *图片数量
       * </pre>
       */
      public Builder setPicNum(int value) {
        bitField0_ |= 0x00020000;
        picNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 PicNum = 23;</code>
       *
       * <pre>
       *图片数量
       * </pre>
       */
      public Builder clearPicNum() {
        bitField0_ = (bitField0_ & ~0x00020000);
        picNum_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<PicInfoModel> picInfo_ =
        java.util.Collections.emptyList();
      private void ensurePicInfoIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          picInfo_ = new java.util.ArrayList<PicInfoModel>(picInfo_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          PicInfoModel, PicInfoModel.Builder, PicInfoModelOrBuilder> picInfoBuilder_;

      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public java.util.List<PicInfoModel> getPicInfoList() {
        if (picInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(picInfo_);
        } else {
          return picInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public int getPicInfoCount() {
        if (picInfoBuilder_ == null) {
          return picInfo_.size();
        } else {
          return picInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public PicInfoModel getPicInfo(int index) {
        if (picInfoBuilder_ == null) {
          return picInfo_.get(index);
        } else {
          return picInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public Builder setPicInfo(
          int index, PicInfoModel value) {
        if (picInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePicInfoIsMutable();
          picInfo_.set(index, value);
          onChanged();
        } else {
          picInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public Builder setPicInfo(
          int index, PicInfoModel.Builder builderForValue) {
        if (picInfoBuilder_ == null) {
          ensurePicInfoIsMutable();
          picInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          picInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public Builder addPicInfo(PicInfoModel value) {
        if (picInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePicInfoIsMutable();
          picInfo_.add(value);
          onChanged();
        } else {
          picInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public Builder addPicInfo(
          int index, PicInfoModel value) {
        if (picInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePicInfoIsMutable();
          picInfo_.add(index, value);
          onChanged();
        } else {
          picInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public Builder addPicInfo(
          PicInfoModel.Builder builderForValue) {
        if (picInfoBuilder_ == null) {
          ensurePicInfoIsMutable();
          picInfo_.add(builderForValue.build());
          onChanged();
        } else {
          picInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public Builder addPicInfo(
          int index, PicInfoModel.Builder builderForValue) {
        if (picInfoBuilder_ == null) {
          ensurePicInfoIsMutable();
          picInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          picInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public Builder addAllPicInfo(
          Iterable<? extends PicInfoModel> values) {
        if (picInfoBuilder_ == null) {
          ensurePicInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, picInfo_);
          onChanged();
        } else {
          picInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public Builder clearPicInfo() {
        if (picInfoBuilder_ == null) {
          picInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          picInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public Builder removePicInfo(int index) {
        if (picInfoBuilder_ == null) {
          ensurePicInfoIsMutable();
          picInfo_.remove(index);
          onChanged();
        } else {
          picInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public PicInfoModel.Builder getPicInfoBuilder(
          int index) {
        return getPicInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public PicInfoModelOrBuilder getPicInfoOrBuilder(
          int index) {
        if (picInfoBuilder_ == null) {
          return picInfo_.get(index);  } else {
          return picInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public java.util.List<? extends PicInfoModelOrBuilder>
           getPicInfoOrBuilderList() {
        if (picInfoBuilder_ != null) {
          return picInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(picInfo_);
        }
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public PicInfoModel.Builder addPicInfoBuilder() {
        return getPicInfoFieldBuilder().addBuilder(
            PicInfoModel.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public PicInfoModel.Builder addPicInfoBuilder(
          int index) {
        return getPicInfoFieldBuilder().addBuilder(
            index, PicInfoModel.getDefaultInstance());
      }
      /**
       * <code>repeated .protocol.PicInfoModel PicInfo = 24;</code>
       *
       * <pre>
       *图片信息
       * </pre>
       */
      public java.util.List<PicInfoModel.Builder>
           getPicInfoBuilderList() {
        return getPicInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          PicInfoModel, PicInfoModel.Builder, PicInfoModelOrBuilder>
          getPicInfoFieldBuilder() {
        if (picInfoBuilder_ == null) {
          picInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              PicInfoModel, PicInfoModel.Builder, PicInfoModelOrBuilder>(
                  picInfo_,
                  ((bitField0_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          picInfo_ = null;
        }
        return picInfoBuilder_;
      }

      private int validity_ ;
      /**
       * <code>optional int32 Validity = 25;</code>
       *
       * <pre>
       *数据有效性 0：无效 1：有效
       * </pre>
       */
      public boolean hasValidity() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 Validity = 25;</code>
       *
       * <pre>
       *数据有效性 0：无效 1：有效
       * </pre>
       */
      public int getValidity() {
        return validity_;
      }
      /**
       * <code>optional int32 Validity = 25;</code>
       *
       * <pre>
       *数据有效性 0：无效 1：有效
       * </pre>
       */
      public Builder setValidity(int value) {
        bitField0_ |= 0x00080000;
        validity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 Validity = 25;</code>
       *
       * <pre>
       *数据有效性 0：无效 1：有效
       * </pre>
       */
      public Builder clearValidity() {
        bitField0_ = (bitField0_ & ~0x00080000);
        validity_ = 0;
        onChanged();
        return this;
      }

      private int waitedLength_ ;
      /**
       * <code>optional int32 WaitedLength = 26;</code>
       *
       * <pre>
       *排队长度
       * </pre>
       */
      public boolean hasWaitedLength() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 WaitedLength = 26;</code>
       *
       * <pre>
       *排队长度
       * </pre>
       */
      public int getWaitedLength() {
        return waitedLength_;
      }
      /**
       * <code>optional int32 WaitedLength = 26;</code>
       *
       * <pre>
       *排队长度
       * </pre>
       */
      public Builder setWaitedLength(int value) {
        bitField0_ |= 0x00100000;
        waitedLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 WaitedLength = 26;</code>
       *
       * <pre>
       *排队长度
       * </pre>
       */
      public Builder clearWaitedLength() {
        bitField0_ = (bitField0_ & ~0x00100000);
        waitedLength_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.OffenceSnapData)
    }

    static {
      defaultInstance = new OffenceSnapData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protocol.OffenceSnapData)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_PlateInfoModel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_PlateInfoModel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_VehicleInfoModel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_VehicleInfoModel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_PlateRectModel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_PlateRectModel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_PicInfoModel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_PicInfoModel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_OffenceSnapData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_OffenceSnapData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\032PATH/OffenceSnapData.proto\022\010protocol\"\211" +
      "\001\n\016PlateInfoModel\022\021\n\tPlateType\030\001 \002(\t\022\r\n\005" +
      "Color\030\002 \002(\t\022\016\n\006Bright\030\003 \002(\005\022\022\n\nLicenseLe" +
      "n\030\004 \002(\005\022\017\n\007Country\030\005 \002(\005\022\017\n\007License\030\006 \002(" +
      "\t\022\017\n\007Believe\030\007 \002(\t\"\362\001\n\020VehicleInfoModel\022" +
      "\r\n\005Index\030\001 \002(\005\022\023\n\013VehicleType\030\002 \002(\005\022\021\n\tC" +
      "hanIndex\030\003 \002(\005\022\022\n\nColorDepth\030\004 \002(\005\022\r\n\005Co" +
      "lor\030\005 \002(\t\022\r\n\005Speed\030\006 \002(\002\022\016\n\006Length\030\007 \002(\002" +
      "\022\030\n\020VehicleLogoRecog\030\010 \002(\t\022\033\n\023VehicleSub" +
      "LogoRecog\030\t \002(\t\022\024\n\014VehicleModel\030\n \002(\t\022\030\n",
      "\020VehicleAttribute\030\013 \002(\005\"E\n\016PlateRectMode" +
      "l\022\t\n\001X\030\001 \002(\005\022\t\n\001Y\030\002 \002(\005\022\r\n\005Width\030\003 \002(\005\022\016" +
      "\n\006Height\030\004 \002(\005\"\203\001\n\014PicInfoModel\022\014\n\004Type\030" +
      "\001 \002(\005\022\024\n\014PicRecogMode\030\002 \002(\005\022\024\n\014RedLightT" +
      "ime\030\003 \002(\005\022+\n\tPlateRect\030\004 \002(\0132\030.protocol." +
      "PlateRectModel\022\014\n\004Data\030\005 \002(\014\"\203\004\n\017Offence" +
      "SnapData\022\n\n\002Id\030\001 \002(\t\022\021\n\tDriveChan\030\002 \002(\005\022" +
      "\023\n\013IllegalType\030\005 \002(\005\022\026\n\016IllegalSubType\030\006" +
      " \002(\t\022\022\n\nSpeedLimit\030\t \002(\005\022+\n\tPlateInfo\030\n " +
      "\002(\0132\030.protocol.PlateInfoModel\022/\n\013Vehicle",
      "Info\030\013 \002(\0132\032.protocol.VehicleInfoModel\022\030" +
      "\n\020MonitoringSiteID\030\014 \002(\t\022\013\n\003Dir\030\r \002(\005\022\022\n" +
      "\nDetectType\030\016 \002(\005\022\025\n\rPilotSafebelt\030\017 \002(\005" +
      "\022\027\n\017CopilotSafebelt\030\020 \002(\005\022\025\n\rPilotSubVis" +
      "or\030\021 \002(\005\022\027\n\017CopilotSubVisor\030\022 \002(\005\022\021\n\tPil" +
      "otCall\030\023 \002(\005\022\025\n\rAlarmDataType\030\024 \002(\005\022\014\n\004T" +
      "ime\030\025 \002(\t\022\016\n\006PicNum\030\027 \002(\005\022\'\n\007PicInfo\030\030 \003" +
      "(\0132\026.protocol.PicInfoModel\022\020\n\010Validity\030\031" +
      " \001(\005\022\024\n\014WaitedLength\030\032 \001(\005B!\n\010protocolB\025" +
      "OffenceSnapDataProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_protocol_PlateInfoModel_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protocol_PlateInfoModel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_PlateInfoModel_descriptor,
        new String[] { "PlateType", "Color", "Bright", "LicenseLen", "Country", "License", "Believe", });
    internal_static_protocol_VehicleInfoModel_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protocol_VehicleInfoModel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_VehicleInfoModel_descriptor,
        new String[] { "Index", "VehicleType", "ChanIndex", "ColorDepth", "Color", "Speed", "Length", "VehicleLogoRecog", "VehicleSubLogoRecog", "VehicleModel", "VehicleAttribute", });
    internal_static_protocol_PlateRectModel_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protocol_PlateRectModel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_PlateRectModel_descriptor,
        new String[] { "X", "Y", "Width", "Height", });
    internal_static_protocol_PicInfoModel_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protocol_PicInfoModel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_PicInfoModel_descriptor,
        new String[] { "Type", "PicRecogMode", "RedLightTime", "PlateRect", "Data", });
    internal_static_protocol_OffenceSnapData_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_protocol_OffenceSnapData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protocol_OffenceSnapData_descriptor,
        new String[] { "Id", "DriveChan", "IllegalType", "IllegalSubType", "SpeedLimit", "PlateInfo", "VehicleInfo", "MonitoringSiteID", "Dir", "DetectType", "PilotSafebelt", "CopilotSafebelt", "PilotSubVisor", "CopilotSubVisor", "PilotCall", "AlarmDataType", "Time", "PicNum", "PicInfo", "Validity", "WaitedLength", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
